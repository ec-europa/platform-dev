# Drupal configuration
# --------------------

# The install profile to use.
platform.profile.name = multisite_drupal_standard

# The site name.
platform.site.name = NextEuropa

# The Drupal core make file.
drupal.make = ${platform.resources.dir}/drupal-core.make

# Database settings.
drupal.db.type = mysql
drupal.db.name = db_name
drupal.db.user = db_user
drupal.db.password = db_pass
drupal.db.host = 127.0.0.1
drupal.db.port = 3306
drupal.db.url = ${drupal.db.type}://${drupal.db.user}:${drupal.db.password}@${drupal.db.host}:${drupal.db.port}/${drupal.db.name}

# Admin user.
drupal.admin.username = admin
drupal.admin.password = pass
drupal.admin.email = admin@example.com

# The location of the .htaccess file in the Drupal root folder.
drupal.htaccess.path = ${platform.build.dir}/.htaccess

# Configuration to append to the .htaccess file in the Drupal root folder.
drupal.htaccess.append.text =


# Platform configuration
# ----------------------

# The root directory of our platform, in order to be able to override it when
# building from a subsite.
platform.basedir = ${project.basedir}

# The make file for the platform.
platform.make = ${platform.resources.dir}/${platform.profile.name}.make


# Paths
# -----

# Paths to executables.
platform.bin = ${project.basedir}/bin
phing.bin = ${project.basedir}/bin/phing
drush.bin = ${project.basedir}/bin/drush
composer.bin = composer.phar
phantomjs.bin = ${project.basedir}/bin/phantomjs

# The build location
phing.project.build.dir = build

# Temporary folder.
phing.project.tmp.dir = tmp

# Build locations.
platform.build.dir = ${project.basedir}/${phing.project.build.dir}

# Local resources
platform.resources.dir = ${platform.basedir}/resources
platform.resources.profiles.dir = ${platform.basedir}/profiles
platform.resources.profile.dir = ${platform.resources.profiles.dir}/${platform.profile.name}

platform.resources.composer.json = ${platform.resources.dir}/composer.json
platform.resources.composer.lock = ${platform.resources.dir}/composer.lock
platform.resources.favicon.ico = ${platform.resources.dir}/favicon.ico

platform.resources.source.dir = ${platform.basedir}/src

# Files and directories inside the Drupal installation.
platform.build.sites.dir = ${platform.build.dir}/sites
platform.build.site.dir = ${platform.build.sites.dir}/${platform.build.site.name}

platform.build.settings.dir = ${platform.build.sites.dir}/default
platform.build.files.dir = ${platform.build.settings.dir}/files

platform.build.profiles.dir = ${platform.build.dir}/profiles
platform.build.profile.dir = ${platform.build.profiles.dir}/${platform.profile.name}

platform.build.composer.json = ${platform.build.dir}/composer.json
platform.build.composer.lock = ${platform.build.dir}/composer.lock
platform.build.favicon.ico = ${platform.build.dir}/favicon.ico

# Git resources.
phing.project.git.dir = ${project.basedir}/.git
phing.project.git.githooks.dir = ${phing.project.git.dir}/hooks
platform.resources.githooks.dir = ${platform.resources.dir}/git-hooks


# Behat configuration
# -------------------

# The location of the Behat executable.
behat.bin = ${project.basedir}/bin/behat

# The location of the Behat tests.
behat.dir = ${project.basedir}/tests

# The location of the Behat configuration template.
behat.yml.template = ${behat.dir}/behat.yml.dist

# The location of the generated Behat configuration file.
behat.yml.path = ${behat.dir}/behat.yml

# The base URL to use in Behat tests.
behat.base_url = http://localhost

# The location to search for Behat subcontexts.
behat.subcontexts.path = ${platform.build.profiles.dir}/common/modules

# The output format to use for Behat tests, either 'progress' or 'pretty'.
behat.formatter.name = progress

# Enable strict mode in Behat tests. Will only pass if all tests are explicitly
# passing.
behat.options.strict = true

# Set verbosity for Behat tests. 0 is completely silent, 1 is normal output, 2
# shows exception backtraces, 3 shows debugging information.
behat.options.verbosity = 2

# Behat\MinkExtension settings.
behat.extensions.selenium2.host = localhost
behat.extensions.selenium2.port = 8643

# Load balancer Phing task configuration.
behat.load_balancer.containers = 5
behat.load_balancer.root = ${behat.dir}
behat.load_balancer.destination = ${behat.dir}
behat.load_balancer.import = ${behat.yml.path}

# PHP CodeSniffer configuration
# -----------------------------

# The file extensions to test.
phpcs.extensions = php inc module install info test profile theme css js

# The default configuration file to generate.
phpcs.config = ${project.basedir}/phpcs.xml

# The coding standard to use.
phpcs.standard = ${project.basedir}/phpcs-ruleset.xml

# Paths to check, delimited by semicolons.
phpcs.files = ${platform.resources.profiles.dir};${platform.resources.source.dir}

# Paths to ignore, delimited by semicolons.
phpcs.ignore =

# The report format. For example 'full', 'summary', 'diff', 'xml', 'json'.
phpcs.report = full

# Whether or not to show sniff codes in the report.
phpcs.sniffcodes = 0

# Whether or not to show the progress of the run.
phpcs.progress = 1

# The location of the file containing the global configuration options.
phpcs.global.config = ${project.basedir}/vendor/squizlabs/php_codesniffer/CodeSniffer.conf


# Host configuration
# ------------------

server.docroot = /var/www


# Debugging
# ---------

# Verbosity of drush commands. Set to TRUE to be verbose.
drush.verbose = FALSE

# Verbosity of PHP Codesniffer. Set to 1 for progress report, 2 for debugging info.
phpcs.verbose = 0

# Flickr configuration
# --------------------

# A valid API key & secret used by the behat tests
flickr.key = foobar
flickr.secret = bas

# Integration configuration
# -------------------------

# Port on which the mocked integration server used by the behat tests will listen.
integration.server.port = 8888

# Varnish configuration
# -------------------------

# Port on which the mocked Varnish server used by the behat tests will listen.
varnish.server.port = 8888
