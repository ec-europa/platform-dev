diff --git a/og_linkchecker.admin.inc b/og_linkchecker.admin.inc
index 8cb075b..8a6dafa 100644
--- og_linkchecker.admin.inc
+++ og_linkchecker.admin.inc
@@ -29,15 +29,13 @@ function og_linkchecker_report() {
   }
   // End code adapted from the Linkchecker module.
 
-  // Retrieve all OG Group GIDs.
-  $gids_query = db_select('og');
-  $gids_query->fields('og', array('gid'));
-  $gids_data = $gids_query->execute();
-
-  $gids = array();
-  foreach ($gids_data as $data) {
-    $gids[] = $data->gid;
-  }
+
+  $gids = db_select('og_membership', 'ogm')
+    ->fields('ogm', array('gid'))
+    ->condition('entity_type', 'node')
+    ->condition('state', array(OG_STATE_ACTIVE))
+    ->execute()
+    ->fetchAll(PDO::FETCH_COLUMN);
 
   $header = array(
     'group' => t('Group'),
@@ -49,13 +47,13 @@ function og_linkchecker_report() {
   $rows = array();
 
   if (empty($gids)) {
-    $output['field_table']  = array('#markup' => t('No organic groups for which to show broken links data.'));
+    $output['field_table']  = array('#markup' => '<em>' . t('No organic groups for which to show broken links data.') . '</em>');
   }
   else {
     // Build rows.
     foreach ($gids as $gid) {
       // Load the group entity.
-      $group = og_get_group('group', $gid)->getEntity();
+      $group = node_load($gid);
 
       // Query for Group Content Types column.
       $content_query = db_select('og_membership', 'om');
diff --git a/og_linkchecker.module b/og_linkchecker.module
index f4057f3..f4d170b 100644
--- og_linkchecker.module
+++ og_linkchecker.module
@@ -15,9 +15,9 @@ function og_linkchecker_help($path, $arg) {
   switch ($path) {
     case 'admin/help#og_linkchecker':
       $output = '';
-      $output .= '<p>' . t("This module creates a menu tab to a linkchecker for each OG group. See the OG Linkchecker groups summary report for a full list of available group reports.") . '</p>';
-      $output .= '<p>' . t('In order for members of an OG group to view their respective groups\' Linkchecker reports, their OG roles must be given permissions though the <a href="@og-permissions">OG global permissions page</a> or through the group\'s permissions page', array('@og-permissions' => url('admin/config/group/permissions'))) . '</p>';
-      $output .= '<p>' . t('Note that this module is dependent on the configuration of the Linkchecker module. For links to the Linkchecker administation pages, see the <a href="@linkchecker-help">Linkchecker help page</a>.', array('@linkchecker-help' => url('admin/help/linkchecker'))) . '</p>';
+      $output .= '<p>' . t("This module creates a menu tab to a Link Checker broken links report for each OG group. See the OG Linkchecker groups summary report for a full list of available group reports.") . '</p>';
+      $output .= '<p>' . t('In order for members of an OG group to view their respective groups\' broken links reports, their OG roles must be given permissions though the <a href="@og-permissions">OG global permissions page</a> or through the group\'s permissions page. Group administrators have access to their group\'s broken links report by default.', array('@og-permissions' => url('admin/config/group/permissions'))) . '</p>';
+      $output .= '<p>' . t('The behavior of this module is dependent on the configuration of the Link Checker module. You must configure Link Checker to scan group content types in order for this module to work. For links to the Link Checker administation pages, see the <a href="@linkchecker-help">Link Checker help page</a>.', array('@linkchecker-help' => url('admin/help/linkchecker'))) . '</p>';
       return $output;
       break;
 
@@ -52,7 +52,7 @@ function og_linkchecker_menu() {
   );
   $items['admin/reports/og_linkchecker'] = array(
     'title'             => 'OG Linkchecker groups summary',
-    'description'       => 'Information about broken links in OG groups',
+    'description'       => 'Information about broken links in OG groups.',
     'page callback'     => 'og_linkchecker_report',
     'access arguments'  => array('access broken links report'),
     'file'              => 'og_linkchecker.admin.inc',
@@ -65,9 +65,8 @@ function og_linkchecker_menu() {
  * Access callback for menu hook.
  */
 function og_linkchecker_access_callback($node) {
-  if (og_get_group_type('node', $node->type)) {
-    $gid = og_get_group('node', $node->nid)->gid;
-    return (user_access('access broken links report') || og_user_access($gid, OG_LC_PERM));
+  if (og_is_group('node', $node)) {
+    return (user_access('access broken links report') || og_user_access('node', $node->nid, OG_LC_PERM));
   }
   else {
     return FALSE;
@@ -98,8 +97,10 @@ function og_linkchecker_report_page($node) {
   // Include pages.inc file to call private Linkchecker function.
   module_load_include('inc', 'linkchecker', 'linkchecker.pages');
 
+  $context = og_context();
+
   // Get group nid so we can find results within this group.
-  $gids = array(og_get_group('node', $node->nid)->gid);
+  $gids = array($context['gid']);
 
   // Begin code adapted from the Linkchecker module.
   drupal_set_title(t('@node-title: Linkchecker Report', array('@node-title' => $node->title)));
