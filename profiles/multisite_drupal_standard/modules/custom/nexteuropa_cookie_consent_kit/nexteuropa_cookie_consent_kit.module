<?php

/**
 * @file
 * Drupal Module: NextEuropa cookie consent kit.
 *
 * Integrates webtool Cookie Consent Kit (CCK).
 */

define('NEXTEUROPA_COOKIE_CONSENT_KIT_WEBTOOL_URL', 'https://ec.europa.eu/wel/cookie-consent/');
define('NEXTEUROPA_COOKIE_CONSENT_KIT_IFRAME_SRC', '//ec.europa.eu/cookie-consent/iframe');

/**
 * Implements hook_menu().
 */
function nexteuropa_cookie_consent_kit_menu() {
  $items = array();
  $items['admin/config/system/nexteuropa-cookie-consent-kit'] = array(
    'title' => 'NextEuropa cookie consent kit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nexteuropa_cookie_consent_kit_admin_form'),
    'access arguments' => array('administer nexteuropa cookie consent kit configuration'),
    'file' => 'nexteuropa_cookie_consent_kit.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function nexteuropa_cookie_consent_kit_permission() {
  $permissions = array(
    'administer nexteuropa cookie consent kit configuration' => array(
      'title' => t('Administer nexteuropa cookie consent kit configuration'),
      'description' => t('Administer nexteuropa cookie consent kit configuration'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_preprocess_html().
 */
function nexteuropa_cookie_consent_kit_preprocess_html(&$vars) {
  if (variable_get('nexteuropa_cookie_consent_kit_display_cookie_banner', 0)) {
    drupal_add_js(NEXTEUROPA_COOKIE_CONSENT_KIT_WEBTOOL_URL . 'consent.js',  array(
      'type' => 'external',
      'scope' => 'header',
      'group' => JS_LIBRARY,
      'every_page' => TRUE,
      'weight' => -100,
      'requires_jquery' => FALSE,
    ));
  }
}

/**
 * Implements template_process_media_youtube_video().
 */
function nexteuropa_cookie_consent_kit_process_media_youtube_video(&$variables) {
  _nexteuropa_cookie_consent_kit_process_media_provider_video($variables);
}

/**
 * Implements template_process_media_vimeo_video().
 */
function nexteuropa_cookie_consent_kit_process_media_vimeo_video(&$variables) {
  _nexteuropa_cookie_consent_kit_process_media_provider_video($variables);
}

/**
 * Implements template_process_media_dailymotion_video().
 */
function nexteuropa_cookie_consent_kit_process_media_dailymotion_video(&$variables) {
  if (!isset($variables['url'])) {
    // Prepare the url for the dailymotion video.
    $daily_query = array('logo' => 0, 'autoPlay' => $variables['autoplay']);
    $variables['url'] = url('//www.dailymotion.com/embed/video/' . $variables['video_id'], array('query' => $daily_query, 'external' => TRUE));
  }
  _nexteuropa_cookie_consent_kit_process_media_provider_video($variables);
}

/**
 * Custom function to alter media_[module]_video template variables.
 *
 * Rewrites iframe src to point to the Video Cookie Consent webservice and sends
 * the original src along in the oriurl parameter.
 */
function _nexteuropa_cookie_consent_kit_process_media_provider_video(&$variables) {
  if (variable_get('nexteuropa_cookie_consent_kit_display_cookie_video', 0)) {
    global $language;

    // Build the final url.
    $query = array();
    $query['oriurl'] = $variables['url'];
    $query['lang'] = $language->language;

    // Allow other modules to alter query parameters.
    drupal_alter('nexteuropa_cookie_consent_kit_query', $query);

    // Override the url with the cookie consent url and add the required query
    // string.
    $variables['url'] = url(variable_get('cookie_consent_webservice_prurl', NEXTEUROPA_COOKIE_CONSENT_KIT_IFRAME_SRC), array(
      'query' => $query,
      'external' => TRUE,
    ));

    // Media dailymotion module is injecting the output in the templete and
    // hard coding the src for the iframe.
    // @see media_dailymotion_preprocess_media_dailymotion_video().
    if ($variables['theme_hook_original'] === 'media_dailymotion_video' && !module_exists('ec_embedded_video')) {
       $variables['output'] = <<<OUTPUT
    <iframe frameborder="0" width="{$variables['width']}" height="{$variables['height']}" src="{$variables['url']}"></iframe>
OUTPUT;
    }
  }
}
