<?php

/**
 * @file
 * nexteuropa_formatters.module
 */

require_once 'nexteuropa_formatters.field.inc';
require_once 'nexteuropa_formatters.field_group.inc';

/**
 * Implements hook_theme().
 */
function nexteuropa_formatters_theme($existing, $type, $theme, $path) {
  return array(
    'nexteuropa_bem_item_list' => array(
      'file' => 'nexteuropa_formatters.theme.inc',
      'variables' => array(
        'items' => array(),
        'modifiers' => array(),
        'type' => 'div',
        'attributes' => array(),
      ),
    ),
    'nexteuropa_file_translations' => array(
      'file' => 'nexteuropa_formatters.theme.inc',
      'variables' => array(
        'files' => array(),
      ),
    ),
  );
}

/**
 * Helper function to return the context nav prefix.
 *
 * @param string $label
 *   The label to be used in the prefix.
 * @param bool $add_expander
 *   If we should add the expander.
 * @param int $trim_at
 *   From which element to trim.
 * @param int $trim_to
 *   To what element to trim.
 *
 * @return array
 *   #prefix and #suffix element for the render object.
 */
function _nexteuropa_formatters_get_context_nav_wrapper($label, $add_expander = FALSE, $trim_at = 0, $trim_to = 0) {
  $extra_classes = '';
  $data_attribute = '';

  if ($add_expander && $trim_at > 0 && $trim_to > 0) {
    $extra_classes = ' has-expander';
    $data_attribute = 'data-trimat="' . $trim_at . '"';
    $data_attribute .= ' data-trimto="' . $trim_to . '"';
  }
  return array(
    '#prefix' => '<span class="context-nav__label">' . $label . '</span><div ' . $data_attribute . ' class="context-nav__items' . $extra_classes . '">',
    '#suffix' => '</div>',
  );
}
