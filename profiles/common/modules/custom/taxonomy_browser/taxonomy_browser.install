<?php
/**
 * @file
 * Install, uninstall, update and schema hooks for Taxonomy Browser.
 */

include_once 'taxonomy_browser.install.inc';

/**
 * Implements hook_enable().
 */
function taxonomy_browser_enable() {
  // Activation message.
  drupal_set_message(t('Taxonomy browser %v feature is now active on your site.', array('%v' => _taxonomy_browser_get_version())));

  // Initialize variable if not exists.
  if (!$var = variable_get('taxonomy_browser_vocabulary')) {
    $var = array();
    variable_set('taxonomy_browser_vocabulary', $var);
  }
}

/**
 * Implements hook_disable().
 */
function taxonomy_browser_disable() {
  // Deactivation message.
  drupal_set_message(t('Taxonomy browser %v feature is now inactive on your site.', array('%v' => _taxonomy_browser_get_version())));
}

/**
 * Implements hook_uninstall().
 */
function taxonomy_browser_uninstall() {
  // Delete 'taxonomy_browser_vocabulary' variable.
  variable_del('taxonomy_browser_vocabulary');
}

/**
 * Implements hook_update_N().
 */
function taxonomy_browser_update_7200(&$sandbox) {
  // Delete old variables.
  db_delete('variable')
    ->condition('name', "taxonomy_browser_%", "LIKE")
    ->condition('name', "taxonomy_browser_vocabulary", "!=")
    ->execute();

  // Update 'taxonomy_browser_vocabulary' to array().
  if ($vids_var = variable_get('taxonomy_browser_vocabulary')) {
    if (!is_array($vids_var)) {
      $vids_available = taxonomy_get_vocabularies();
      $vids = array();
      foreach ($vids_available as $v) {
        $vids[$v->vid] = 0;
      }
      $vids[$vids_var] = $vids_var;
      variable_set('taxonomy_browser_vocabulary', $vids);

      // Update 'taxonomy_browser' block.
      db_update('block')
        ->fields(array(
          'delta' => 'taxonomy_browser_vocabulary_' . $vids_var,
          )
        )
        ->condition('delta', 'taxonomy_browser')
        ->execute();
    }
  }
}
