<?php
/**
 * @file
 * Views implementing europa components.
 */

/**
 * Implements hook_views_api().
 */
function nexteuropa_core_views_views_api() {
  return ['api' => 3.0];
}

/**
 * Implements hook_theme_registry_alter().
 *
 * AFAIK, there is no other way to do this horrendous hack to retrieve ALL the
 * themes hooks available.
 * We could use the regular way to do it with module_invoke_all('theme') and it
 * works properly. The only issue is that theme hooks defined in the theme are
 * not detected because we are using an admin theme.
 *
 * Any alternative way is very welcome.
 */
function nexteuropa_core_views_theme_registry_alter(&$hook_definitions) {
  global $theme;
  // Bails out if we are not in the default theme context.
  if ($theme != variable_get('theme_default')) {
    return;
  }

  $hooks = array();

  $row_styles = module_invoke_all('nexteuropa_core_views_row_styles_info');
  // Allow modules to alter row style list.
  drupal_alter('nexteuropa_core_views_row_styles', $row_styles);
  // Reset the variable.
  variable_set('nexteuropa_core_views_hooks', $hooks);

  foreach ($hook_definitions as $hook => $data) {
    if (in_array($hook, $row_styles)) {
      // Include a file if the theme function or variable processor is held
      // elsewhere.
      if (!empty($data['includes'])) {
        foreach ($data['includes'] as $include_file) {
          include_once DRUPAL_ROOT . '/' . $include_file;
        }
      }

      $function_name = $theme . '_atomium_theme_' . $hook;
      if (function_exists($function_name)) {
        $hooks = drupal_array_merge_deep(
          (array) call_user_func_array(
            $function_name, array()
          ),
          $hooks
        );
      }
    }
  }

  // Copy hooks data just in case if we need them later in Views.
  foreach ($hooks as $hook_name => $hook_definition) {
    $hooks[$hook_name] += $hook_definitions[$hook_name];
  }

  // Removes hooks with no or empty 'variables' key.
  array_filter($hooks, function ($item) {
    return isset($item['variables']) && empty($item['variables']);
  });

  // Sort hooks alphabetically.
  ksort($hooks);
  // Store hooks in a variable, once again, not the best way.
  variable_set('nexteuropa_core_views_hooks', $hooks);
}

/**
 * Implements hook_nexteuropa_core_views_row_styles_info().
 */
function nexteuropa_core_views_nexteuropa_core_views_row_styles_info() {
  return array(
    'banner',
    'card',
    'blockquote',
    'timelines',
    'expandable',
  );
}
