<?php

/**
 * @file
 * Install, uninstall, update and schema hooks.
 */

/**
 * Implements hook_install().
 */
function multisite_og_navigation_tree_install() {
  db_update('system')
    ->fields(array(
      'weight' => 5,
    ))
    ->condition('name', 'multisite_og_navigation_tree', '=')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function multisite_og_navigation_tree_uninstall() {
  $group_taxonomy_field = 'group_taxonomy';

  foreach (field_read_fields(array('module' => 'taxonomy'), array('include_inactive' => TRUE)) as $field) {
    if ($field['field_name'] == $group_taxonomy_field) {
      field_delete_field($field['field_name']);
      $instances = field_read_instances(array('field_id' => $field['id']), array('include_inactive' => TRUE));
      foreach ($instances as $instance) {
        field_delete_instance($instance, FALSE);
      }
      drupal_set_message(t('@fieldname deleted', array(@fieldname => $field['field_name'])));
    }
  }
  db_delete('variable')
    ->condition('name', 'multisite_og_navigation_tree_%', 'LIKE')
    ->execute();
  db_delete('variable')
    ->condition('name', '_mont_%', 'LIKE')
    ->execute();
  cache_clear_all('variables', 'cache');
}

/**
 * Implements hook_schema().
 */
function multisite_og_navigation_tree_schema() {
  $schema['multisite_og_navigation_tree_grouptaxonomy'] = array(
    'description' => 'TODO: please describe this table!',
    'fields' => array(
      'id' => array(
        'description' => 'Unique Key field',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'Root term id',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'Vocabulary',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'Nid of the group node',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'node_type' => array(
        'description' => 'Node type',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
        'default' => 'NULL',
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

/**
 * Implements hook_enable().
 */
function multisite_og_navigation_tree_enable() {
  $machine_name = 'multisite_og_navigation_tree';

  if (!$vocabulary = taxonomy_vocabulary_machine_name_load($machine_name)) {
    $vocabulary = new stdClass();
    $vocabulary->name = t('Group taxonomy');
    $vocabulary->machine_name = $machine_name;
    $vocabulary->multiple = 0;
    $vocabulary->required = 1;
    $vocabulary->hierarchy = 1;
    $vocabulary->relations = 0;
    $vocabulary->module = 'multisite_og_navigation_tree';
    $vocabulary->weight = -50;
    taxonomy_vocabulary_save($vocabulary);
    drupal_set_message(t('Vocabulary "Group taxonomy" created.'));
  }
  variable_set('multisite_og_navigation_tree_vid', $vocabulary->vid);
}
