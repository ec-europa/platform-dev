<?php

/**
 * @file
 * Tests for the OG Navigation Tree module.
 */

/**
 * Tests the OG Navigation Tree.
 *
 * Performs the following tests:
 * - Create group taxonomy.
 * - Set settings.
 * - Create taxonomies.
 * - Create group owner with the right permissions.
 */
class MultisiteOgNavigationTreeDrupalWebTestCase extends DrupalWebTestCase {

  /**
   * A test user.
   *
   * @var object
   */
  protected $basicUser;

  /**
   * A test administrator user.
   *
   * @var object
   */
  protected $adminUser;

  /**
   * Test group nodes.
   *
   * @var array
   */
  protected $groups;

  /**
   * Returns test case metadata.
   */
  public static function getInfo() {
    return array(
      'name' => 'Multisite OG Navigation Tree',
      'description' => 'Tests functionality of the OG Navigation Tree module.',
      'group' => 'Organic groups',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('multisite_og_navigation_tree', 'og_ui', 'og_access'));

    // Create a group type.
    $this->drupalCreateContentType(
      array(
        'type' => 'groups',
        'name' => 'groups',
      )
    );
    og_create_field(OG_GROUP_FIELD, 'node', 'groups');

    // Create some group content types and add the OG fields.
    $this->drupalCreateContentType(
      array(
        'type' => 'group_content_a',
        'name' => 'group_content_a',
      )
    );
    og_create_field(OG_AUDIENCE_FIELD, 'node', 'group_content_a');
    og_create_field(OG_CONTENT_ACCESS_FIELD, 'node', 'group_content_a');

    // Create a basic user, which is subject to moderation.
    $permissions = array(
      'access content',
      'create groups content',
      'edit any groups content',
    );
    $basic_user = $this->drupalCreateUser($permissions);

    // Create an admin user that can bypass revision moderation.
    $permissions = array(
      'administer site configuration',
      'access administration pages',
      'access content',
      'administer blocks',
      'administer nodes',
      'administer users',
      'administer taxonomy',
      'administer content types',
      'create groups content',
      'edit any groups content',
      'create group_content_a content',
      'edit any group_content_a content',
      'administer group',
      'administer OG Navigation Tree',
    );
    $admin_user = $this->drupalCreateUser($permissions);

    // Assign users to their test suite-wide properties.
    $this->basicUser = $basic_user;
    $this->adminUser = $admin_user;
  }

  /**
   * Performs a number of tests.
   *
   * Website Admin user:
   * - Is OG navigation tree vocabulary present?
   * - Is the "OG Navigation Tree" block present?
   * - Can we assign the "OG Navigation Tree" block to a region?
   * - When creating a group node, is the parent term added to the vocabulary?
   * - Verify the "group taxonomy tree" tab is not yet available when going to
   *   the group node.
   * - Verify the settings page is available:
   *    - Verify the vocabulary can be chosen.
   *    - Verify the group content type is listed.
   *    - Verify we can save those settings.
   * - Verify the "group taxonomy tree" tab is available when going to the
   *   group node after settings have been saved - Verify that when clicking the
   *   tab, the terms listed is still empty. - Verify that on the node page, the
   *   "OG Navigation Tree" block is not shown (because there are no terms yet).
   * - Add a term to the group node:
   *    - Verify this term is now listed on the "group taxonomy tree" tab
   *      listing.
   * - Create a new group:
   *    - Verify the term of first group is not shown on this new group.
   * - Verify the "OG Navigation Tree" block is now showing on the first group's
   *   node page.
   *    - Click on the terms link to go to the term page.
   *    - Verify the block is no longer shown (taxonomy context is not yet set).
   * - Set the context to be determined by taxonomy terms:
   *    - Verify the block is now also shown on the term page.
   *
   * - Add the taxonomy field through OG field settings to the group content
   *   type.
   *    - Verify the field is set available on the creation form for
   *      content for group A.
   *    - Verify the term for groupa is displayed.
   *    - Create content for groupb without terms.
   *       - Verify the term from group A is not displayed.
   *
   * Group member user:
   * - Verify no access to taxonomy page.
   * - Verify no access to settings page.
   * - Verify the "group navigation tree" tab is not visible on the group's
   *   node page.
   * - Verify the link of the tab is not accessible.
   * - Verify the edit link of the term is not accessible.
   *
   * Group member user with 'administer groups' permission:
   * - Verify no access to taxonomy page.
   * - Verify no access to settings page.
   * - Verify the "group navigation tree" tab is visible on the group's node
   *   page.
   * - Verify the link of the tab is accessible.
   * - Verify the edit link of the term is accessible.
   *
   * Anonymous user:
   * - Verify the user can access the group, but he can not see the tabs.
   * - Access is denied for the taxonomy page.
   * - Access is denied for the settings page.
   */
  public function testInstall() {
    $this->drupalLogin($this->adminUser);

    // Verify the proper menus are added and available.
    $this->drupalGet('admin/structure/taxonomy/multisite_og_navigation_tree');
    $this->assertResponse(200, 'The vocabulary "multisite_og_navigation_tree" was succesfully added by the module');

    // Verify the block is there.
    $this->drupalGet('admin/structure/block');
    $this->assertText(t('OG Navigation Tree'), t('The "OG Navigation Tree" block is available'));

    // Assign the block to a region.
    $edit = array(
      'blocks[multisite_og_navigation_tree_mont-navigation][region]' => 'sidebar_left',
    );
    $this->drupalPost('admin/structure/block', $edit, 'Save blocks');

    // Create a group.
    $settings = array();
    $settings['type'] = 'groups';
    $settings['title'] = 'groupa';
    $settings[OG_GROUP_FIELD][LANGUAGE_NONE][0]['value'] = 1;
    $this->groups['groupa'] = $this->drupalCreateNode($settings);

    // Associate admin to the groupa.
    $group = og_get_group('node', $this->groups['groupa']->nid);
    $group->save();
    og_group($group->gid, array(
      'entity' => $this->adminUser,
    ));
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/edit');

    // Verify the groups parent taxonomy is created.
    $terms = taxonomy_get_term_by_name('groupa');
    $this->assertTrue(empty($terms), t('The parent term "groupa" is created and found for group "groupa".'));

    // Go to the group page verify the tab is not present.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertNoText(t('Group taxonomy tree'), t('The "Group taxonomy tree" tab is not yet available (settings need to be set first, this is done in the next step)'));

    // Set the ov navigation tree settings.
    $this->drupalGet('admin/config/group/multisite_og_navigation_tree');
    $this->assertResponse(200, "The configuration page for 'OG Navigation Tree' is available.");

    $this->assertText(t('groups'), t('Content type "groups" is listed as a possible group type for the taxonomy navigation tree field.'));

    $vocabulary = taxonomy_vocabulary_machine_name_load('multisite_og_navigation_tree');
    $edit = array();
    $edit['multisite_og_navigation_tree_vid'] = $vocabulary->vid;
    $edit['_mont_taxonomy_enabled[groups]'] = 'groups';
    $this->drupalPost($this->getUrl(), $edit, t('Save settings'));
    $this->assertResponse(200, 'OG Navigation Tree settings have been saved');

    // Go to the group page verify the tab is now present.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertText(t('Group taxonomy tree'), t('The "Group taxonomy tree" tab was found now after settings were set.'));
    $this->clickLink(t('Group taxonomy tree'));
    $this->assertResponse(200, 'The "Group taxonomy tree" tab is reachable.');

    $this->assertText(t('No terms available.'), t('The group "groupa" has no terms yet'));

    // Go to a group without any terms and verify the block is not displayed.
    $this->assertNoRaw($this->blockCode(), t('The "OG navigation tree" block is hidden on the "groupa" page because the group has no terms yet.'));

    // Add some terms to the group.
    $this->clickLink(t('Add taxonomy term'));
    $this->assertResponse(200, 'The "Add taxonomy term" page is reachable');
    $edit = array();
    $edit['name'] = 'terma';
    $this->drupalPost($this->getUrl(), $edit, t('Save'));
    $this->assertResponse(200);
    $this->assertText(t('Created new term terma.'), t('Created new term "terma" for group "groupa"'));

    // Verify the term is now listed.
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/vocabulary');
    $this->assertRaw($this->termCode(), t('Term "terma" is now visible on the "Group taxonomy tree" page of "groupa".'));

    // Create a new group.
    $settings = array();
    $settings['type'] = 'groups';
    $settings['title'] = 'groupb';
    $settings[OG_GROUP_FIELD][LANGUAGE_NONE][0]['value'] = 1;
    $this->groups['groupb'] = $this->drupalCreateNode($settings);

    // Associate admin with group B.
    $group = og_get_group('node', $this->groups['groupb']->nid);
    $group->save();
    og_group($group->gid, array('entity' => $this->adminUser));

    // Go to another group and verify the term of the first group is not listed.
    $this->drupalGet('node/' . $this->groups['groupb']->nid . '/vocabulary');
    $this->assertNoRaw($this->termCode(), t('Term "terma" of "groupa" is not visible on "groupb".'));

    // Go to the first group with terms and verify the block is displayed.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertRaw($this->blockCode(), t('The "OG navigation tree" block is now visible on "groupa" page because it has terms now.'));

    // Go to one of the terms.
    $this->clickLink("terma");
    $this->assertNoRaw($this->blockCode(), t('The "OG navigation tree" block is hidden on "groupa" terms page because the context is not set for type "taxonomy"'));

    // Enable group context for taxonomy.
    $this->drupalGet('admin/config/group/context');
    $this->assertNoFieldChecked('edit-group-context-enabled-group-taxonomy', t('"Taxonomy" context is not set'));
    $edit = array();
    $edit['group_context[enabled][group_taxonomy]'] = '1';
    $this->drupalPost($this->getUrl(), $edit, t('Save settings'));
    $this->assertResponse(200);
    $this->assertFieldChecked('edit-group-context-enabled-group-taxonomy', t('"Taxonomy" context is now set'));

    // Go to one of the terms.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->clickLink("terma");
    $this->assertRaw($this->blockCode(), t('The "OG navigation tree" block is now visible on "groupa" terms page because context for "taxonomy" is enabled)'));

    // Add the taxonomy field and verify the group taxonomy field is available.
    $this->drupalGet('admin/config/group/fields');
    $this->assertText(t('Group Taxonomy'), t('The group taxonomy field option is available in OG Field settings'));

    // Add the field and verify it is added to the content type.
    og_create_field(MULTISITE_OG_NAVIGATION_TREE_OG_TAXONOMY_FIELD, 'node', 'group_content_a');
    $this->drupalGet('admin/structure/types/manage/group_content_a/fields/group_taxonomy');
    $this->assertResponse(200, "The group taxonomy field is available for group_content_a");

    // Verify the field is available on the add content page under group A.
    $this->drupalGet('node/add/group-content-a', array(
      'query' => array(
        'gids_node[]' => $this->groups['groupa']->nid,
      ),
    ));
    $this->assertText(t('Group Taxonomy'), t('The group taxonomy field is shown.'));
    $this->assertText('terma', t('The "terma" is available as a possible term'));

    $terms = taxonomy_get_term_by_name('terma');
    $term = array_pop($terms);
    $edit = array();
    $edit['title'] = "Content A";
    $edit['group_taxonomy[und][]'] = $term->tid;
    $this->drupalPost(NULL, $edit, t('Save'));

    // Verify the field is not available on the add content page under group B.
    $this->drupalGet('node/add/group-content-a', array(
      'query' => array(
        'gids_node[]' => $this->groups['groupb']->nid,
      ),
    ));
    $this->assertText(t('Group Taxonomy'), t('The group taxonomy field is shown.'));
    $this->assertNoText('terma', t('The "terma" is not available as a possible term (does not belong to groupb)'));

    // Log in as a different user without the OG navigation tree permission.
    $this->drupalLogin($this->basicUser);

    // Associate user with group A.
    $group = og_get_group('node', $this->groups['groupa']->nid);
    $group->save();
    og_group($group->gid, array('entity' => $this->basicUser));

    // Verify the proper menus are added but not available.
    $this->drupalGet('admin/structure/taxonomy/multisite_og_navigation_tree');
    $this->assertResponse(403, "The taxonomy page for 'multisite_og_navigation_tree' vocabulary is not accessible for a normal user (no 'administer OG Navigation Tree' permissions)");

    // Set the OG navigation tree settings.
    $this->drupalGet('admin/config/group/multisite_og_navigation_tree');
    $this->assertResponse(403, "The settings page for OG navigation tree is not accessible for a normal user (no 'administer OG Navigation Tree' permissions)");

    // Go to the group page to verify if the tab is not present.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertNoText(t('Group taxonomy tree'), t('The "Group taxonomy tree" tab was not found because user has no "administer group" permission set.'));

    // Go to the vocabulary page.
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/vocabulary');
    $this->assertResponse(403, "The vocabulary page is not accessible for a normal user (no 'administer group' permissions)");

    // Go to the edit term page.
    $terms = taxonomy_get_term_by_name('terma');
    $term = array_pop($terms);
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/vocabulary/edit_term/' . $term->tid);
    $this->assertResponse(403, "The term edit page is not accessible for a normal user (no 'administer group' permissions)");

    // Change permissions for authenticated members to gain access to the
    // edit page.
    $roles = array_flip(og_get_global_roles());
    $rid = $roles[OG_AUTHENTICATED_ROLE];
    $permissions = array(
      'administer group' => 1,
    );
    og_role_change_permissions($rid, $permissions);

    $this->drupalGet('admin/structure/taxonomy/multisite_og_navigation_tree');
    $this->assertResponse(403, "The taxonomy page for 'multisite_og_navigation_tree' vocabulary is not accessible for a normal user (no 'administer OG Navigation Tree' permissions)");

    // Set the OG navigation tree settings.
    $this->drupalGet('admin/config/group/multisite_og_navigation_tree');
    $this->assertResponse(403, "The settings page for OG navigation tree is not accessible for a normal user (no 'administer OG Navigation Tree' permissions)");

    // Go to the group page to verify if the tab is now present.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertText(t('Group taxonomy tree'), t('The "Group taxonomy tree" tab was found because user has "administer group" permission set.'));

    // Go to the vocabulary page, we should have access now.
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/vocabulary');
    $this->assertResponse(200, "The vocabulary page is now accessible for a normal user with 'administer group' permissions");

    // Go to the edit term page, we should have access now.
    $terms = taxonomy_get_term_by_name('terma');
    $term = array_pop($terms);
    $this->drupalGet('node/' . $this->groups['groupa']->nid . '/vocabulary/edit_term/' . $term->tid);
    $this->assertResponse(200, "The term edit page is now accessible for a normal user with 'administer group' permissions");

    // Log out and try to visit as an anonymous user.
    $this->drupalLogout();

    $this->drupalGet('admin/structure/taxonomy/multisite_og_navigation_tree');
    $this->assertResponse(403, "The taxonomy page for 'multisite_og_navigation_tree' vocabulary is not accessible for anonymous users (no 'administer OG Navigation Tree' permissions)");

    // Set the ov navigation tree settings.
    $this->drupalGet('admin/config/group/multisite_og_navigation_tree');
    $this->assertResponse(403, "The settings page for OG navigation tree is not accessible for anonymous users (no 'administer OG Navigation Tree' permissions)");

    // Go to the group page to verify if the tab is now present.
    $this->drupalGet('node/' . $this->groups['groupa']->nid);
    $this->assertResponse(200);
    $this->assertNoText(t('Group taxonomy tree'), 'The "Group taxonomy tree" tab was not found because user has no "administer group" permission set.');
  }

  /**
   * Returns the raw HTML code used to verify if the block is present in a page.
   */
  protected function blockCode() {
    return 'block-multisite-og-navigation-tree';
  }

  /**
   * Returns the raw HTML code used to verify if the term is present in a page.
   */
  protected function termCode() {
    return '>terma</a>';
  }

}
