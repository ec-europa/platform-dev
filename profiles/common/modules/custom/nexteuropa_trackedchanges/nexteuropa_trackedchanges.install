<?php
/**
 * @file
 * NextEuropa Tracked Changes install, update and uninstall functions.
 */

/**
 * Implements hook_schema().
 */
function nexteuropa_trackedchanges_schema() {
  $schema['netc_info'] = array(
    'description' => 'Entities where tracked changes have been detected into 
    their WYSIWYG fields.',
    'fields' => array(
      'info_id' => array(
        'description' => 'Info id',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rel_entity_id' => array(
        'description' => 'Related entity id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rel_entity_type' => array(
        'description' => 'Related entity type',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'rel_entity_bundle' => array(
        'description' => 'Related entity bundle',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'rel_entity_label' => array(
        'description' => 'Related entity label',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'rel_entity_state' => array(
        'description' => 'The current moderation state of the related entity.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'scanned' => array(
        'description' => 'The Unix timestamp when the entity has been scanned.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'rel_entity_language' => array(
        'description' => 'Related entity language',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('info_id'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 *
 * Sets the default value of parameters used by this module and CKEditor LITE.
 */
function nexteuropa_trackedchanges_enable() {

  // Workbench moderation state for WYSIWYG tracking settings.
  $wbm_state = array(
    'validated' => 'validated',
    'published' => 'published',
  );
  variable_set('nexteuropa_trackedchanges_tracking_wbm_states', $wbm_state);
  // WYSIWYG tracking settings for "Published" status case.
  variable_set('nexteuropa_trackedchanges_tracking_status', 1);

  // Default behavior for CKEditor LITE buttons.
  variable_set('ckeditor_lite_istracking', 0);
  variable_set('nexteuropa_trackedchanges_disable_track_on_create', 1);
  variable_set('nexteuropa_trackedchanges_force_track_on_edit', 1);
  variable_set('nexteuropa_trackedchanges_rebuild_elapse_time', 300);

  /*
   * Create WYSIWYG profile for Full HTML text format with Change Tracking.
   *
   * Introducing that format will allow users to choose tracking changes
   * functionality for WYSIWYG fields based on filter type.
   * Format is based on 'Full HTML' text format and profile.
   */
  // Use the full html text format as basis to create
  // NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME one.
  $full_html_track_format = multisite_config_service('filter')->getFullFormat('full_html');

  if ($full_html_track_format) {
    $full_html_track_format->format = NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME;
    $full_html_track_format->name = NEXTEUROPA_TRACKEDCHANGES_FHT_HUMAN_NAME;
    $full_html_track_format->status = '1';
    $full_html_track_format->weight = '-9';
    filter_format_save($full_html_track_format);

    // Create WYSIWYG profile for Full HTML text format with change tracking.
    // Creation based on Full HTML profile to keep a consistent functionality.
    $wys_fl_html = multisite_config_service('wysiwyg')->getProfile('full_html');
    $wys_fl_html_settings = (array) $wys_fl_html->settings;
    multisite_config_service('wysiwyg')->createProfile(
      NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME,
      'ckeditor',
      $wys_fl_html_settings
    );

    // Adding LITE plugin change tracking functionality to new profile.
    // Enable ckeditor_lite WYSIWYG plugin.
    _nexteuropa_trackedchanges_enable_buttons(NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME);

    // Cloning roles to 'Full HTML + Change tracking' text format. It needs to
    // be done at least here because sooner it was not possible.
    $fl_html_roles = multisite_config_service('filter')->getFormatRoles('full_html');
    if ($fl_html_roles) {
      multisite_config_service('filter')->setFormatRoles(NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME, $fl_html_roles);
    }

    watchdog('nexteuropa_trackedchanges', 'The @name text format and its WYSIWYG profile have been created.',
      array('@name' => NEXTEUROPA_TRACKEDCHANGES_FHT_HUMAN_NAME), WATCHDOG_INFO);
  }

  // CKEditor Lite permission.
  $permissions = array(
    // ckeditor_lite highlight changes.
    'ckeditor_lite highlight changes',
  );
  multisite_config_service('user')->grantPermission('administrator', $permissions);
  multisite_config_service('user')->grantPermission('contributor', $permissions);
  multisite_config_service('user')->grantPermission('editor', $permissions);

  if (module_exists('nexteuropa_editorial')) {
    multisite_config_service('user')->grantPermission(NEXTEUROPA_EDITORIAL_TEAM_MEMBER_ROLE, $permissions);
  }
  watchdog('nexteuropa_trackedchanges', 'Default permissions of the feature have been set.', array(), WATCHDOG_INFO);

  drupal_set_message(t('NextEuropa Tracked Changes feature is now active on your site.'));

  // Create the field added to the netc_info entity.
  // Only if it does not exists (disable followed by an enable case).
  $is_field_exiting = field_info_field('field_netc_info_languages');
  if (!$is_field_exiting) {
    $field = array(
      'field_name' => 'field_netc_info_languages',
      'type' => 'text',
      'cardinality' => -1,
      'locked' => TRUE,
      'settings' => array(
        // Field is not visible in field UI and can only be instantiated
        // programmatically.
        'no_ui' => TRUE,
      ),
    );
    field_create_field($field);

    // Create instance for field, bind it to a entity bundle.
    $instance = array(
      'field_name' => $field['field_name'],
      'entity_type' => 'netc_info',
      'bundle' => 'netc_info',
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_disable().
 *
 * Cleans the default value of parameters used by this module and CKEditor LITE.
 */
function nexteuropa_trackedchanges_disable() {

  // Workbench moderation state for WYSIWYG tracking settings.
  variable_del('nexteuropa_trackedchanges_tracking_wbm_states');
  // WYSIWYG tracking settings for "Published" status case.
  variable_del('nexteuropa_trackedchanges_tracking_status');
  // Default behavior for CKEditor LITE buttons.
  variable_del('nexteuropa_trackedchanges_disable_track_on_create');
  variable_del('nexteuropa_trackedchanges_force_track_on_edit');
  variable_del('nexteuropa_trackedchanges_rebuild_elapse_time');

  // Rename the 'full_html_track' profile and text format.
  // It is better than moving all field from a format to another because
  // That could take time and we could reach a time out on it.
  $full_html_track = multisite_config_service('filter')->getFullFormat(NEXTEUROPA_TRACKEDCHANGES_FHT_MACHINE_NAME, TRUE);
  if ($full_html_track) {
    $full_html_track->name = 'Full HTML (Change tracking feature disabled)';
    filter_format_save($full_html_track);
  }

  // Clean CKEDITOR LITE settings in the different profiles settings.
  $wysiwyg_profiles = _nexteuropa_trackedchanges_get_profiles();

  if ($wysiwyg_profiles) {
    $profiles_info = $wysiwyg_profiles['info'];
    foreach ($profiles_info as $profile_name => $profile_info) {
      if ($profile_info['cke_lite_status']) {
        _nexteuropa_trackedchanges_disable_buttons($profile_name);
      }
    }
  }

  drupal_set_message(t('NextEuropa Tracked Changes feature is now inactive on your site.'));
}

/**
 * Implements hook_uninstall().
 */
function nexteuropa_trackedchanges_uninstall() {
  $instance = array(
    'field_name' => 'field_netc_info_languages',
    'entity_type' => 'netc_info',
    'bundle' => 'netc_info',
  );
  field_delete_instance($instance);
}
