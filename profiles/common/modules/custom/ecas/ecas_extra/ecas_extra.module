<?php

/**
 * @file
 * Main functions and hook implementations of the ECAS Extra module.
 */

/**
 * Implements hook_menu().
 */
function ecas_extra_menu() {
  $items = array();

  $items['admin/config/ecas/extra'] = array(
    'title' => 'Extra settings',
    'description' => 'Configure additional ECAS settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecas_extra_admin_settings'),
    'access arguments' => array('administer ecas'),
    'type' => MENU_NORMAL_ITEM | MENU_LOCAL_TASK,
    'weight' => 1,
  );

  return $items;
}

/**
 * Implements hook_action_info().
 */
function ecas_extra_action_info() {
  return array(
    'ecas_extra_deny_account_action' => array(
      'type' => 'user',
      'label' => t('Deny the activation of a user account.'),
      'configurable' => FALSE,
      'triggers' => array(
        'node_insert',
        'node_presave',
        'node_update',
        'node_view',
        'comment_insert',
      ),
    ),
  );
}

/**
 * Form constructor for the deny account action form.
 *
 * @todo Prefix the function name with the module name.
 *
 * @see https://webgate.ec.europa.eu/CITnet/jira/browse/NEXTEUROPA-3626
 */
function ecas_extra_deny_account_action_form($context) {
  $form['user_roles'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Available roles'),
  );
  return $form;
}

/**
 * Form submit handler for the deny account action form.
 *
 * @todo Prefix the function name with the module name.
 *
 * @see ecas_extra_deny_account_action_form()
 * @see https://webgate.ec.europa.eu/CITnet/jira/browse/NEXTEUROPA-3626
 */
function ecas_extra_deny_account_action_submit($form, $form_state) {
  $roles = array();

  // Keep only the selected roles.
  foreach ($form_state['values']['user_roles'] as $rid) {
    if ($rid <> 0) {
      // Skip the roles that are not selected (with a value equal to 0).
      $roles[] = $rid;
    }
  }

  return array('manage_membership_add_rid' => $roles);
}

/**
 * Implement the 'Deny the activation of a user account' action.
 *
 * @param object $object
 *   User object to deny.
 * @param object $context
 *   Context object.
 *
 * @todo Prefix the function name with the module name.
 *
 * @see https://webgate.ec.europa.eu/CITnet/jira/browse/NEXTEUROPA-3626
 */
function ecas_extra_deny_account_action(&$object, $context) {
  global $user, $base_url;

  // Avoid working with crap data.
  if (!$object || !$object->uid) {
    return;
  }

  // Avoid denying an already denied user.
  $result = db_query('SELECT COUNT(uid) FROM {denied_users} WHERE uid = :uid', array('uid' => $object->uid));
  $count = $result->fetchField();
  if ($count) {
    return;
  }

  // Store the given user in a dedicated table.
  $data = array(
    'uid' => $object->uid,
    'denied_by' => empty($user) ? 1 : $user->uid,
    'denied' => REQUEST_TIME,
  );
  if (!drupal_write_record('denied_users', $data)) {
    drupal_set_message(t('Unable to deny user %s', array($object->name)), 'error');
  }

  // Send a mail to the denied user.
  $params['context']['subject'] = t('deny activation of your account');
  $params['context']['message'] = t('Your account has been denied.');

  $lastname_field = field_get_items('user', $object, ECAS_DEFAULT_PROFILE_LASTNAME_FIELD);
  $params = array(
    '!name' => $object->name,
    '!lastname' => isset($lastname_field[0]) ? $lastname_field[0] : '',
    '!mail' => $object->mail,
    '!site_url' => $base_url,
    '!site_name' => variable_get('site_name', ''),
  );

  // Send the mail by using hook_mail().
  drupal_mail('ecas_extra', 'deny_account', $object->mail, language_default(), $params);
}

/**
 * Implements hook_user_update().
 */
function ecas_extra_user_update($edit, $account, $category = NULL) {
  if (is_object($account) && $category == 'account' && isset($edit['status']) && ($edit['status'] == 1)) {
    // The user is being activated.
    db_delete('denied_users')
      ->condition('uid', $account->uid)
      ->execute();
  }
}

/**
 * Implements hook_mail().
 */
function ecas_extra_mail($key, &$message, $params) {
  if ($key == 'deny_account') {
    $language = $message['language'];
    $mail_from = variable_get('site_mail', ini_get('sendmail_from'));
    $message['from'] = $mail_from;
    $message['headers'] = array(
      'MIME-Version' => '1.0',
      'Content-Type' => 'text/html; charset=UTF-8;',
      'From' => $mail_from,
      'Return-Path' => $mail_from,
    );

    // @todo It is not possible to translate dynamic content with the t()
    //   function. Make the subject translatable using i18n_variable.
    // @see https://webgate.ec.europa.eu/CITnet/jira/browse/NEXTEUROPA-3628
    // @codingStandardsIgnoreStart
    $message['subject'] = t(variable_get('ecas_extra_deny_action_subject', ''), $params, array('langcode' => $language->language));
    // @codingStandardsIgnoreEnd

    $body = variable_get('ecas_extra_deny_action_mail', '');
    $args = array('langcode' => $language->language);

    // @todo It is not possible to translate dynamic content with the t()
    //   function. Make the body translatable using i18n_variable.
    // @see https://webgate.ec.europa.eu/CITnet/jira/browse/NEXTEUROPA-3628
    // @codingStandardsIgnoreStart
    $message['body'] = array(t($body, $params, $args));
    // @codingStandardsIgnoreEnd
  }
}

/**
 * Form constructor for the ECAS Extra administration form.
 */
function ecas_extra_admin_settings() {
  $form['param'] = array(
    '#type' => 'fieldset',
    '#title' => t('ECAS extra module settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['param']['ecas_extra_deny_action_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Deny action mail subject'),
    '#default_value' => variable_get('ecas_extra_deny_action_subject', t('Account activation denied')),
    '#description' => t('subject of the mail sent to the denied accounts'),
  );

  $body = 'Dear <b>!lastname</b>,
  <br /><br />
  The activation request of the account <b>!name</b> for the site <a href="!site_url"><b>!site_name</b><a> has been denied.
  <br /><br />';
  $form['param']['ecas_extra_deny_action_mail'] = array(
    '#type' => 'textarea',
    '#title' => t('Deny action mail body'),
    '#default_value' => variable_get('ecas_extra_deny_action_mail', $body),
    '#cols' => 60,
    '#rows' => 5,
    '#description' => t('Body of the mail sent to the denied accounts'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_views_api().
 */
function ecas_extra_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'ecas_extra') . '/includes/views',
  );
}
