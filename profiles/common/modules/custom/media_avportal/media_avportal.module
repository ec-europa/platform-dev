<?php

/**
 * @file
 * Core feature module.
 */

// A registry of variable_get defaults.
include_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'media_avportal') . '/includes/media_avportal.variables.inc';

// Hooks and callbacks for integrating with File Entity module for display.
include_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'media_avportal') . '/includes/media_avportal.formatters.inc';

/**
 * Implements hook_media_internet_providers().
 */
function media_avportal_media_internet_providers() {
  $info['MediaInternetAvportalHandler'] = array('title' => t('AV Portal'));
  return $info;
}

/**
 * Implements hook_stream_wrappers().
 */
function media_avportal_stream_wrappers() {
  return array(
    'avportal' => array(
      'name' => t('AV Portal videos'),
      'class' => 'MediaAvportalStreamWrapper',
      'description' => t('Videos provided by AV Portal.'),
      'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function media_avportal_theme($existing, $type, $theme, $path) {
  return array(
    'media_avportal_video' => array(
      'variables' => array('uri' => NULL, 'options' => array()),
      'file' => 'media_avportal.theme.inc',
      'path' => $path . '/includes/themes',
      'template' => 'media-avportal-video',
    ),
  );
}

/**
 * Implements hook_media_parse().
 *
 * @todo This hook should be deprecated.
 */
function media_avportal_media_parse($embed_code) {
  $handler = new MediaInternetAvportalHandler($embed_code);
  return $handler->parse($embed_code);
}

/**
 * Implements hook_file_mimetype_mapping_alter().
 *
 * Regster the video/avportal mimetype.
 */
function media_avportal_file_mimetype_mapping_alter(&$mapping) {
  $mapping['mimetypes'][] = 'video/avportal';
}

/**
 * Implements hook_ctools_plugin_api().
 */
function media_avportal_ctools_plugin_api($owner, $api) {
  static $api_versions = array(
    'file_entity' => array('file_default_displays' => 1),
  );
  if (isset($api_versions[$owner][$api])) {
    return array('version' => $api_versions[$owner][$api]);
  }
}
