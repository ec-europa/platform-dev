<?php

/**
 * @file
 * Allows to insert and render tokens into a CKEditor-enabled textarea.
 */

include_once 'includes/nexteuropa_token_ckeditor.tmgmt_poetry.inc';

/**
 * Default filter view, exposed by nexteuropa_token_ckeditor module.
 *
 * @see nexteuropa_token_ckeditor_form_nexteuropa_token_settings_form_alter()
 */
define('NEXTEUROPA_TOKEN_CKEDITOR_BEAN_DEFAULT_FILTER_VIEW', 'nexteuropa_token_ckeditor_bean_filter_view:default');

/**
 * Default filter view, exposed by nexteuropa_token_ckeditor module.
 *
 * @see nexteuropa_token_ckeditor_form_nexteuropa_token_settings_form_alter()
 */
define('NEXTEUROPA_TOKEN_CKEDITOR_DEFAULT_FILTER_VIEW', 'nexteuropa_token_ckeditor_filter_view:default');

/**
 * Regular expression matching inline view mode tokens.
 *
 * @see nexteuropa_token_ckeditor_token_filter_filter_tokens()
 */
define('NEXTEUROPA_TOKEN_CKEDITOR_REGEX_VIEW_MODE_TOKENS', '/((\[\w*\:\d*\:view-mode\:\w*\]){.*})/U');

/**
 * Regular expression matching inline link tokens.
 *
 * @see nexteuropa_token_ckeditor_token_filter_filter_tokens()
 */
define('NEXTEUROPA_TOKEN_CKEDITOR_REGEX_LINK_TOKENS', '/((\[\w*\:\d*\:link\]){.*})/U');

/**
 * Implements hook_views_api().
 */
function nexteuropa_token_ckeditor_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'nexteuropa_token_ckeditor') . '/views',
  );
}

/**
 * Implements hook_menu().
 */
function nexteuropa_token_ckeditor_menu() {
  $items = array();
  $items['nexteuropa/token-ckeditor/%'] = array(
    'page callback' => 'nexteuropa_token_ckeditor_ajax_callback',
    'page arguments' => array(2),
    'access callback' => 'nexteuropa_token_ckeditor_ajax_access_callback',
    'type' => MENU_CALLBACK,
    'delivery callback' => 'ajax_deliver',
  );

  $items['nexteuropa/token-bean-ckeditor/%'] = array(
    'page callback' => 'nexteuropa_token_ckeditor_bean_ajax_callback',
    'page arguments' => array(2),
    'access callback' => 'nexteuropa_token_ckeditor_bean_ajax_access_callback',
    'type' => MENU_CALLBACK,
    'delivery callback' => 'ajax_deliver',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function nexteuropa_token_ckeditor_theme($existing, $type, $theme, $path) {
  return array(
    'token_ckeditor_tips' => array(
      'template' => 'token-ckeditor-tips',
      'path' => $path . '/theme',
    ),
  );
}

/**
 * AJAX page callback.
 *
 * @see: nexteuropa_token_ckeditor_menu()
 */
function nexteuropa_token_ckeditor_ajax_callback($editor_id = '') {
  $filter_view = variable_get('nexteuropa_token_ckeditor_filter_view', NEXTEUROPA_TOKEN_CKEDITOR_DEFAULT_FILTER_VIEW);
  return nexteuropa_token_ckeditor_ajax_sub_callback($filter_view, $editor_id);
}

/**
 * AJAX page callback.
 *
 * @see: nexteuropa_token_ckeditor_menu()
 */
function nexteuropa_token_ckeditor_bean_ajax_callback($editor_id = '') {
  $filter_view = variable_get('nexteuropa_token_ckeditor_bean_filter_view', NEXTEUROPA_TOKEN_CKEDITOR_BEAN_DEFAULT_FILTER_VIEW);
  return nexteuropa_token_ckeditor_ajax_sub_callback($filter_view, $editor_id);
}

/**
 * AJAX page callback's callback.
 */
function nexteuropa_token_ckeditor_ajax_sub_callback($filter_view, $editor_id = '') {
  drupal_add_css(drupal_get_path('module', 'nexteuropa_token_ckeditor') . '/css/nexteuropa_token.css');

  list($view_name, $display_id) = explode(':', $filter_view);
  $content = '';
  $content .= theme('token_ckeditor_tips');
  $content .= views_embed_view($view_name, $display_id);

  $commands = array();
  $commands[] = ajax_command_html('#' . $editor_id, $content);
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Menu access callback.
 *
 * @see: nexteuropa_token_ckeditor_menu()
 */
function nexteuropa_token_ckeditor_bean_ajax_access_callback() {
  $filter_view = variable_get('nexteuropa_token_ckeditor_bean_filter_view', NEXTEUROPA_TOKEN_CKEDITOR_BEAN_DEFAULT_FILTER_VIEW);
  return nexteuropa_token_ckeditor_ajax_access_sub_callback($filter_view);
}

/**
 * Menu access callback.
 *
 * @see: nexteuropa_token_ckeditor_menu()
 */
function nexteuropa_token_ckeditor_ajax_access_callback() {
  $filter_view = variable_get('nexteuropa_token_ckeditor_filter_view', NEXTEUROPA_TOKEN_CKEDITOR_DEFAULT_FILTER_VIEW);
  return nexteuropa_token_ckeditor_ajax_access_sub_callback($filter_view);
}

/**
 * Menu access sub callback.
 */
function nexteuropa_token_ckeditor_ajax_access_sub_callback($filter_view) {
  list($view_name, $display_id) = explode(':', $filter_view);
  $view = views_get_view($view_name);
  return $view && $view->access($display_id);
}

/**
 * Implements hook_ckeditor_plugin().
 */
function nexteuropa_token_ckeditor_ckeditor_plugin() {
  return array(
    'nexteuropa_token_ckeditor' => array(
      'name' => 'nexteuropa_token_ckeditor',
      'desc' => t('NextEuropa Token'),
      'path' => drupal_get_path('module', 'nexteuropa_token_ckeditor') . '/plugins/nexteuropa_token_ckeditor/',
    ),
  );
}

/**
 * Implements hook_wysiwyg_plugin().
 */
function nexteuropa_token_ckeditor_wysiwyg_plugin($editor, $version) {
  if ($editor == 'ckeditor') {
    return array(
      'nexteuropa_token_ckeditor' => array(
        'path' => drupal_get_path('module', 'nexteuropa_token_ckeditor') . '/plugins/nexteuropa_token_ckeditor/',
        'load' => TRUE,
        'buttons' => array('NextEuropaToken' => t('NextEuropa Token')),
      ),
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nexteuropa_token_ckeditor_form_nexteuropa_token_settings_form_alter(&$form, &$form_state) {
  $form['token_ckeditor'] = array(
    '#type' => 'fieldset',
    '#title' => t('CKEditor Token settings'),
  );
  $form['token_ckeditor']['nexteuropa_token_ckeditor_filter_view'] = array(
    '#type' => 'select',
    '#title' => t('Filter view display'),
    '#description' => t("View display to be used as a filter in the CKEditor plugin."),
    '#options' => views_get_views_as_options(),
    '#default_value' => variable_get('nexteuropa_token_ckeditor_filter_view', NEXTEUROPA_TOKEN_CKEDITOR_DEFAULT_FILTER_VIEW),
    '#required' => TRUE,
  );
}

/**
 * Implements hook_element_info_alter().
 */
function nexteuropa_token_ckeditor_element_info_alter(&$types) {
  $types['text_format']['#pre_render'][] = 'nexteuropa_token_ckeditor_pre_render_text_format';
}

/**
 * Implements #pre_render callback.
 *
 * @see: token_insert_ckeditor_element_info_alter()
 */
function nexteuropa_token_ckeditor_pre_render_text_format($element) {
  // Attach drupal.ajax system library in order to AJAX-enabled CKEditor plugin
  // to work.
  $element['#attached']['library'][] = array('system', 'drupal.ajax');
  return $element;
}

/**
 * Implements hook_filter_info_alter().
 */
function nexteuropa_token_ckeditor_filter_info_alter(&$info) {
  if (isset($info['filter_tokens'])) {
    $info['filter_tokens']['process callback'] = 'nexteuropa_token_ckeditor_token_filter_filter_tokens';
  }
}

/**
 * Alter filter process callback for the token input filter.
 *
 * @see nexteuropa_token_ckeditor_filter_info_alter()
 */
function nexteuropa_token_ckeditor_token_filter_filter_tokens($text, $filter, $format, $langcode, $cache, $cache_id) {
  $regular_expressions = array(
    NEXTEUROPA_TOKEN_CKEDITOR_REGEX_VIEW_MODE_TOKENS,
    NEXTEUROPA_TOKEN_CKEDITOR_REGEX_LINK_TOKENS,
  );
  foreach ($regular_expressions as $regular_expression) {
    $matches = array();
    preg_match_all($regular_expression, $text, $matches);
    if ($matches) {
      foreach ($matches[0] as $key => $value) {
        $text = str_replace($matches[1][$key], $matches[2][$key], $text);
      }
    }
  }

  return _token_filter_filter_tokens($text, $filter, $format, $langcode, $cache, $cache_id);
}

/**
 * Implements hook_custom_theme().
 *
 * NEPT-105:The popup 'Insert internal content' (on a Ckeditor block)
 * when the theme of the modal and the back page isn't the same.
 */
function nexteuropa_token_ckeditor_custom_theme() {
  // Get current path.
  $path = current_path();

  // Clean the paths.
  $paths = array_map(function($value) {
    return str_replace('/%', '', $value);
  }, array_keys(nexteuropa_token_ckeditor_menu()));

  // Find is there are any candidates.
  $candidates = array_filter($paths, function($v) use ($path) {
    return strpos($path, $v) !== FALSE;
  });

  if ($candidates) {
    $theme = variable_get('node_admin_theme', '0') ?
      variable_get('admin_theme_default', 'seven') :
      variable_get('theme_default', '');
    return $theme;
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * See NEPT-191: Delete the History object to avoid errors in the views
 * provided by this module only.
 */
function nexteuropa_token_ckeditor_views_pre_render(&$view) {
  if (isset($view->export_module) && 'nexteuropa_token_ckeditor' == $view->export_module) {
    if ($view->use_ajax && !$view->editing) {
      drupal_add_js(drupal_get_path('module', 'nexteuropa_token_ckeditor') . '/js/delete_history.js', array('weight' => 1));
    }
  }
}
