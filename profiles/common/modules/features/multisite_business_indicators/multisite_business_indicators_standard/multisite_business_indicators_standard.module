<?php

/**
 * @file
 * Code for the Business Indicators Standard feature.
 */

include_once 'multisite_business_indicators_standard.features.inc';

/**
 * Implements hook_views_data().
 */
function multisite_business_indicators_standard_views_data() {

  $data = array();
  $data['business_indicators_ext_index']['table']['group'] = t('Business Indicators Ext Index');

  $data['business_indicators_ext_index']['table']['base'] = array(
    // This is the identifier field for the view.
    'field' => 'bieid',
    'title' => t('Business Indicators Ext Index'),
    'help' => t('Example table contains example content and can be related to nodes.'),
    'weight' => -10,
  );

  // BIEID table field.
  $data['business_indicators_ext_index']['bieid'] = array(
    'title' => t('Business Indicators Ext Index'),
    'help' => t('Some example content that references a node.'),
  );

  // ID Node or Term.
  $data['business_indicators_ext_index']['uuid'] = array(
    'title' => t('Uuid'),
    'help' => t('Universally Unique IDentifier Node or Term.'),
    'field' => array(
      'handler' => 'views_handler_field_business_indicators_ext_uuid',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // ID original node or term.
  $data['business_indicators_ext_index']['oid'] = array(
    'title' => t('Original ID'),
    'help' => t('Original ID Node or Term.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // Type Node or Term (Domain, Category and FAQ).
  $data['business_indicators_ext_index']['type'] = array(
    'title' => t('Type'),
    'help' => t('Type Node or Term (Domain, Category and FAQ).'),
    'field' => array(
      'handler' => 'views_handler_field',
      // This is use by the table display plugin.
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );

  // La Node or Term.
  $data['business_indicators_ext_index']['language'] = array(
    'title' => t('Language'),
    'help' => t('Language Node or Term.'),
    'field' => array(
      'handler' => 'views_handler_field',
      // This is use by the table display plugin.
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );

  // IP user visitor.
  $data['business_indicators_ext_index']['ip'] = array(
    'title' => t('IP'),
    'help' => t('IP user visitor.'),
    'field' => array(
      'handler' => 'views_handler_field',
      // This is use by the table display plugin.
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );

  // Example timestamp field.
  $data['business_indicators_ext_index']['timestamp'] = array(
    'title' => t('Timestamp'),
    'help' => t('Just a timestamp field.'),
    'field' => array(
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort_date',
    ),
    'filter' => array(
      'handler' => 'date_views_filter_handler_simple',
    ),
  );

  // User Role table field.
  $data['business_indicators_ext_index']['user_roles'] = array(
    'title' => t('User Roles'),
    'help' => t('User role visitor.'),
    'field' => array(
      'handler' => 'views_handler_field_ecas_user_roles',
      // This is use by the table display plugin.
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_ecas_user_roles',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );

  return $data;
}

/**
 * Function for insert statistic into business_indicators_ext_index.
 *
 * @param array $entity
 *   Insert into the db a business indicator record.
 */
function insert_business_indicators_ext(array $entity) {
  global $user, $language;
  $key_roles = user_is_anonymous() ? 1 : (_is_ecas_user($user) ? 2 : 3);
  $statistic = control_business_indicators_ext_list($entity, $key_roles);
  if (empty($statistic)) {
    $date = strtotime(date('Y/m/d'));

    db_insert('business_indicators_ext_index')->fields(array(
      'uuid' => $entity['uuid'],
      'oid' => $entity['oid'],
      'type' => $entity['type'],
      'language' => $language->language,
      'ip' => ip_address(),
      'timestamp' => $date,
      'user_roles' => $key_roles,
    ))->execute();
  }
}

/**
 * Function control statistic persist into business_indicators_ext_index.
 */
function control_business_indicators_ext_list($entity, $key_roles) {
  $date = strtotime(date('Y/m/d'));

  $statistic = db_select('business_indicators_ext_index', 'bie')
    ->fields('bie')
    ->condition('uuid', $entity['uuid'], '=')
    ->condition('type', $entity['type'], '=')
    ->condition('ip', ip_address(), '=')
    ->condition('timestamp', $date, '=')
    ->condition('user_roles', $key_roles, '=')
    ->execute()
    ->fetchAssoc();

  return $statistic;
}

/**
 * Get a node title translation.
 */
function node_load_string_translate($node, $lang) {
  $nodes = translation_node_get_translations($node['tnid']);
  $title = ($nodes) ? $nodes[$lang]->title : $node['title'];

  return $title;
}

/**
 * Send the entity to save it in the db.
 */
function multisite_business_indicators_standard_node_view($node, $view_mode, $langcode) {
  $entity = array(
    'uuid' => $node->uuid,
    'oid' => $node->tnid,
    'type' => $node->type,
  );

  insert_business_indicators_ext($entity);
}

/**
 * Get a term name translation.
 */
function taxonomy_load_string_translate($id, $name, $type, $lang) {
  $lid = db_select('locales_source', 'ls')->fields('ls')->condition('ls.source', $name)->condition('ls.context', $type . ':' . $id . ':name')->execute()->fetchAssoc();

  $title = db_select('locales_target', 'lt')->fields('lt')->condition('lt.lid', $lid['lid'])->condition('lt.language', $lang)->execute()->fetchAssoc();

  return ($title) ? $title['translation'] : $name;
}
