<?php

/**
 * @file
 * Code for the Events feature.
 */

include_once 'events_core.features.inc';

/**
 * Implements hook_token_info().
 */
function events_core_token_info() {
  $info['types']['Breadcrumb_events'] = array(
    'name' => 'Breadcrumb_events',
    'description' => 'Tokens related to Breadcrumb.',
  );
  $info['tokens']['Breadcrumb_events']['events_title'] = array(
    'name' => t("events breadcrumb title"),
    'description' => t("The breadcrumb title of the events."),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function events_core_tokens($type, $tokens, $data = array(), $options = array()) {
  $replacements = array();
  // Tokens for e_libray_core breadcrump.
  if ($type == 'Breadcrumb_events') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'events_title':
                    $replacements[$original] = t("events");
          break;
      }
    }
  }
  return $replacements;
}


/**
 * Implements hook_node_form_alter().
 */
function events_core_form_event_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'custom_valid_events_link';
}

/**
 * Validation function : scan urls.
 */
function custom_valid_events_link(&$form, &$form_state) {
  if (isset($form['field_location'][LANGUAGE_NONE][0]['url']['#value']) && (bool) $form['field_location'][LANGUAGE_NONE][0]['url']['#value']) {
    multisite_drupal_toolbox_linkit_scan_url($form['field_location'][LANGUAGE_NONE][0]['url']['#value'], 'field_location');
  }
}
