<?php

/**
 * @file
 * Code for the Multisite Embedded Video feature.
 */

include_once 'ec_embedded_video.features.inc';

/**
 * Implements hook_file_type().
 *
 * @see http://drupal.org/node/1245686
 */
function ec_embedded_video_file_type($file) {
  if ($file->filemime == 'video/youtube') {
    return array('video');
  }

  if ($file->filemime == 'video/vimeo') {
    return array('video');
  }

  if ($file->filemime == 'video/dailymotion') {
    return array('video');
  }

  if ($file->filemime == 'video/avportal') {
    return array('video');
  }
}

/**
 * Default Protocol-relative URL (PRURL).
 *
 * Of the Video Cookie Consent webservice offered by Webtools.
 * This is the location of the service that offers a "shield" between the video
 * service in order to protect the user from unwanted cookies. The basic concept
 * is that all embedded YouTube, Vimeo and dailymotion iframe sources are
 * rewritten to point to this service. After explicit consent to eventual third
 * party cookies the service will serve the video.
 */
define('EC_EMBEDDED_VIDEO_COOKIE_CONSENT_WEBSERVICE_PRURL', '//ec.europa.eu/cookie-consent/iframe');

/**
 * Implements hook_theme_registry_alter().
 */
function ec_embedded_video_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'ec_embedded_video') . '/themes';

  // Add Cookie Consent support theming and preprocess for supported filetypes.
  foreach (array(
    'media_youtube',
    'media_vimeo',
    'media_dailymotion',
    'media_avportal',
  ) as $module) {
    if (module_exists($module)) {
      // Override the location of supported Media providers template files.
      $theme_registry[$module . '_video']['path'] = $path;

      // Add our preprocess function to the bottom.
      $theme_registry[$module . '_video']['preprocess functions'][] = '_ec_embedded_video_preprocess_' . $module . '_video';
    }
  }
}

/**
 * Preprocess function for media_youtube_video.
 */
function _ec_embedded_video_preprocess_media_youtube_video(&$variables) {
  _ec_embedded_video_preprocess_ec_embedded_video_video($variables);
}

/**
 * Preprocess function for media_vimeo_video.
 */
function _ec_embedded_video_preprocess_media_vimeo_video(&$variables) {
  _ec_embedded_video_preprocess_ec_embedded_video_video($variables);
}

/**
 * Preprocess function for media_avportal_video.
 */
function _ec_embedded_video_preprocess_media_avportal_video(&$variables) {
  $query = array(
    'ref' => $variables['video_id'],
    'starttime' => 0,
    'endtime' => 0,
  );
  $variables['url'] = url('//ec.europa.eu/avservices/play.cfm', array('query' => $query, 'external' => TRUE));

  // Don't use cookie compliant for avportal video.
  $variables['ec_embedded_video_url'] = $variables['url'];
}

/**
 * Preprocess function for media_dailymotion_video.
 */
function _ec_embedded_video_preprocess_media_dailymotion_video(&$variables) {
  // We support only iframe (not object) for dailymotion.
  // @see media_dailymotion.theme.inc.
  $daily_query = array('logo' => 0, 'autoPlay' => $variables['autoplay']);
  $variables['url'] = url('//www.dailymotion.com/embed/video/' . $variables['video_id'], array('query' => $daily_query, 'external' => TRUE));

  _ec_embedded_video_preprocess_ec_embedded_video_video($variables);
}

/**
 * Custom function to alter media_[module]_video template variables.
 *
 * Rewrites iframe src to point to the Video Cookie Consent webservice and sends
 * the original src along in the oriurl parameter.
 */
function _ec_embedded_video_preprocess_ec_embedded_video_video(&$variables) {
  global $language;

  // Build the final url.
  $ec_embedded_video_webservice_url = variable_get('cookie_consent_webservice_prurl', EC_EMBEDDED_VIDEO_COOKIE_CONSENT_WEBSERVICE_PRURL);
  $query = array();
  $query['oriurl'] = $variables['url'];
  $query['lang'] = $language->language;

  // Allow other modules to alter query parameters.
  drupal_alter('ec_embedded_video_query', $query);

  $variables['ec_embedded_video_url'] = url($ec_embedded_video_webservice_url, array('query' => $query, 'external' => TRUE));
}
