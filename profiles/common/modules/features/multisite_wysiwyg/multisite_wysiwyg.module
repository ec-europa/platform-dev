<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook__wysiwyg_editor_settings_alter().
 */
function multisite_wysiwyg_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'ckeditor') {
    global $base_url;
    $skins_path = drupal_get_path('module', 'multisite_wysiwyg') . '/ckeditor/skins';
    $active_skin = variable_get('multisite_ckeditor_skin', 'moonocolor');
    // Set custom skin.
    $settings['skin'] = sprintf('%s,' . '%s/%s/%s/', $active_skin, $base_url, $skins_path, $active_skin);

    // Provide additional custom settings.
    $settings['customConfig'] = base_path() . drupal_get_path('module', 'multisite_wysiwyg') . '/multisite_wysiwyg_config.js';
  }

}

/**
 * Implements hook_element_info_alter().
 */
function multisite_wysiwyg_element_info_alter(&$types) {
  $types['text_format']['#pre_render'][] = 'multisite_wysiwyg_pre_render_text_format';
}

/**
 * Pre-render callback that persists "create" or "edit" context on AJAX calls.
 *
 * @param mixed $element
 *    Element array.
 *
 * @return mixed
 *    Element array.
 *
 * @see multisite_wysiwyg_element_info_alter()
 */
function multisite_wysiwyg_pre_render_text_format($element) {
  // Not all entity types are handled uniformly here (i.e. Taxonomy Term).
  // Ignore current object state if no state can be determined.
  if (isset($element['#entity_type']) && isset($element['#entity'])) {
    $entity_info = entity_get_info($element['#entity_type']);
    $entity_id_key = $entity_info['entity keys']['id'];
    $is_new = !isset($element['#entity']->{$entity_id_key}) || empty($element['#entity']->{$entity_id_key});
    $state = $is_new ? 'create' : 'edit';
    multisite_wysiwyg_set_current_entity_object_state($state);
  }
  else {
    multisite_wysiwyg_set_current_entity_object_state('ignore');
  }
  return $element;
}

/**
 * Helper: store current entity object state.
 *
 * Object can be in one of the following 3 states:
 *  - create: entity is being created.
 *  - edit: entity is being edited.
 *  - ignore: not possible to determine any state (i.e. Taxonomy Terms).
 *
 * @param string $state
 *    One of the states above.
 *
 * @return string
 *    Current entity object state.
 *
 * @see multisite_wysiwyg_wysiwyg_editor_settings_alter()
 */
function multisite_wysiwyg_set_current_entity_object_state($state = NULL) {
  $storage = &drupal_static(__FUNCTION__);
  if ($state !== NULL) {
    $storage = $state;
  }
  return $storage;
}

/**
 * Implements hook_ckeditor_plugin().
 */
function multisite_wysiwyg_ckeditor_plugin() {
  return array(
    'multisite_wysiwyg_link_hreflang' => array(
      'name' => 'multisite_wysiwyg_link_hreflang',
      'desc' => t('CKEditor Link hreflang - A plugin to replace the "lang" attribute setting field by a "hreflang" attribute setting field'),
      'path' => drupal_get_path('module', 'multisite_wysiwyg') . '/ckeditor/plugins/link_hreflang/',
    ),
  );
}

/**
 * Implements hook_wysiwyg_plugin().
 */
function multisite_wysiwyg_wysiwyg_plugin($editor, $version) {
  if ($editor == 'ckeditor') {
    return array(
      'multisite_wysiwyg_link_hreflang' => array(
        'path' => drupal_get_path('module', 'multisite_wysiwyg') . '/ckeditor/plugins/link_hreflang/',
        'load' => TRUE,
        'extensions' => array('Link' => t('CKEditor Link hreflang')),
      ),
    );
  }
}
