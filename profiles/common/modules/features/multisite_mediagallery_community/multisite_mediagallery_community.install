<?php

/**
 * @file
 * Install the Media Gallery feature.
 */

/**
 * Implements hook_enable().
 */
function multisite_mediagallery_community_enable() {
  // Get all the 'gallerymedia' nodes with value in 'Group content visibility'.
  $mediagalleries_og = db_select('field_data_group_content_access', 'f')
    ->fields('f', array('entity_id'))
    ->condition('bundle', 'gallerymedia', '=');

  // Get old 'gallerymedia' content without value in 'Group content visibility'.
  $old_mediagalleries = db_select('node', 'n')
    ->fields('n', array('nid', 'vid', 'language'))
    ->condition('n.type', 'gallerymedia')
    ->condition('n.nid', $mediagalleries_og, 'NOT IN')
    ->execute()
    ->fetchAll();

  // Add default value (public access) to the old 'gallerymedia' nodes.
  foreach ($old_mediagalleries as $node) {
    $fields = array(
      'entity_type' => 'node',
      'bundle' => 'gallerymedia',
      'deleted' => 0,
      'entity_id' => $node->nid,
      'revision_id' => $node->vid,
      'language' => $node->language,
      'delta' => 0,
      'group_content_access_value' => 1,
    );
    // Add new row in the 'field_data_group_content_access' table.
    db_insert('field_data_group_content_access')
      ->fields($fields)
      ->execute();
    // Add new row in the 'field_revision_group_content_access' table.
    db_insert('field_revision_group_content_access')
      ->fields($fields)
      ->execute();
  }

  multisite_drupal_toolbox_add_views_context('communities', 'galleries');
  multisite_drupal_toolbox_add_content_type_context('communities', 'gallerymedia');

  // Override drupal variables defined in core multisite_mediagallery_core.
  variable_set('pathauto_node_gallerymedia_pattern', 'community/[node:og_group_ref]/gallerymedia/[node:title]');

  drupal_flush_all_caches();

  // Activation message.
  drupal_set_message(t('Multisite Media Gallery Community feature is now active on your site.'));
}

/**
 * Implements hook_disable().
 */
function multisite_mediagallery_community_disable() {
  multisite_drupal_toolbox_remove_views_context('communities', 'galleries');
  multisite_drupal_toolbox_remove_content_type_context('communities', 'gallerymedia');

  // Delete drupal variables.
  variable_del('pathauto_node_gallerymedia_pattern');

  drupal_flush_all_caches();

  // Deactivation message.
  drupal_set_message(t('Multisite Media Gallery Community feature is now inactive on your site.'));
}

/**
 * Implements hook_modules_enabled().
 */
function multisite_mediagallery_community_modules_enabled($modules) {
  if (in_array('multisite_mediagallery_community', $modules)) {
    // Force feature revert to update og permissions.
    features_revert(array('multisite_mediagallery_community' => array('og_features_permission')));
  }
}
