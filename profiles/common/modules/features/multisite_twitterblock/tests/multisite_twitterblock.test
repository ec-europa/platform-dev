<?php

/**
 * @file
 * Tests for multisite_twitterblock.module.
 *
 * ECWeb MULTISITE QA.
 */

/**
 * Defines a base class for testing the multisite twitterblock module.
 */
class MultisiteTwitterblockDevelopmentQA extends DrupalWebTestCase {

  protected $adminUser = NULL;
  protected $basicUser = NULL;
  protected $configuration = array(
    'fpfis_twitter_type' => 'smk-twitter_search',
    'fpfis_twitter_title' => 'Some twitter widget',
    'fpfis_twitter_slug' => 'cloud-influencers',
    'fpfis_twitter_screen_name' => 'DigitalAgendaEU',
    'fpfis_twitter_rts_display_original' => '1',
    'fpfis_twitter_result_type' => 'popular',
    'fpfis_twitter_restr_lang_to' => 'rus',
    'fpfis_twitter_owner_screen_name' => 'DigitalAgendaEU',
    'fpfis_twitter_override_types[article]' => 'article',
    'fpfis_twitter_include_rts' => '1',
    'fpfis_twitter_incl_profiles' => '',
    'fpfis_twitter_incl_hashtags' => 'box',
    'fpfis_twitter_from' => '',
    'fpfis_twitter_excl_profiles' => '',
    'fpfis_twitter_excl_hashtags' => '',
    'fpfis_twitter_display_user_pic' => '1',
    'fpfis_twitter_display_user' => '1',
    'fpfis_twitter_count' => '20',
    'form_id' => 'multisite_twitterblock_admin_settings',
  );

  /**
   * Returns test information.
   *
   * @return array
   *   Info
   */
  public static function getInfo() {
    return array(
      'name' => 'multisite twitter widget tests',
      'description' => 'Tests main twitter widget features',
      'group' => 'Multisite - Media',
    );
  }

  /**
   * Setups the main necessary modules.
   */
  public function setUp() {
    parent::setUp(array('multisite_twitterblock'));

    $https_proxy = array(
      'dae',
      'fpfis-dev.net1.cec.eu.int',
      'intragate.ec.europa.eu',
      '127.0.0.1',
      'localhost',
      'biguonia.cc.cec.eu.int',
      '158.167.39.277',
      'dbprod-dmrz.jrc.org',
      '139.191.254.129',
      'intragate.acceptance.ec.europa.eu',
      'intragate.ec.europa.eu',
    );
    variable_set('proxy_exceptions', $https_proxy);

    // Create and log in admin user.
    $admin_permissions = array(
      'access content',
      'create page content',
      'edit own page content',
      'create article content',
      'edit own article content',
      'administer fpfis twitter widget',
      'administer fpfis twitter feature',
      'override fpfis twitter widget',
    );

    $this->adminUser = $this->drupalCreateUser($admin_permissions);

    // Create and log in basic user.
    $permissions = array(
      'access content',
      'create page content',
      'edit own page content',
      'create article content',
      'edit own article content',
    );

    $this->basicUser = $this->drupalCreateUser($permissions);
  }

  /**
   * The main test of twitter widget.
   */
  public function testTwitterWidgetFeatures() {
    $this->loadAdminPageByBasicUser();
    $this->saveConfig();
    $this->checkContentSetting();
  }

  /**
   * Loads admin page by a basic user.
   */
  protected function loadAdminPageByBasicUser() {
    $this->drupalLogin($this->basicUser);
    $this->drupalGet('admin/config/content/multisite_twitterblock/twitter/', array());
    $this->assertRaw('Access denied', 'Configuration was not saved!');
    $this->drupalLogout();
  }

  /**
   * Saves config for Social Media.
   */
  protected function saveConfig() {
    $this->drupalLogin($this->adminUser);
    $this->drupalPost('admin/config/content/multisite_twitterblock/twitter/', $this->configuration, t('Save configuration'));
    $this->assertRaw('The configuration options have been saved', 'Configuration was successfully saved');
    $this->drupalLogout();
  }

  /**
   * Checks content settings.
   */
  protected function checkContentSetting() {

    // Check wether basic user has access to override twitter setting.
    $this->drupalLogin($this->basicUser);
    $this->drupalGet('node/add/article/');
    $this->assertNoField('fpfis_twitter_override[enabled]', 'No Override settings');

    $this->drupalLogout();

    // Check wether admin user has override twitter setting on Article page.
    // (article has twitter settings).
    $this->drupalLogin($this->adminUser);
    $this->drupalGet('node/add/article/');
    $this->assertField('fpfis_twitter_override[enabled]', 'Override settings');

    // Check wether admin user has override twitter setting on Basic page.
    // (basic page does not have twitter settings).
    $this->drupalGet('node/add/page/');
    $this->assertNoField('fpfis_twitter_override[enabled]', 'No Override settings');
    $this->drupalLogout();
  }

}
