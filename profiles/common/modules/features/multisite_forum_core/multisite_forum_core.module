<?php

/**
 * @file
 * Code for the Multisite Forum Core feature.
 */

define('MULTISITE_FORUM_CORE_TAXO_NAME', 'forums');
define('MULTISITE_FORUM_CORE_CT_NAME', 'discussion');

include_once 'multisite_forum_core.features.inc';


/**
 * Implements hook_boot().
 */
function multisite_forum_core_boot() {
  multisite_forum_core_replace_strings();
}

/**
 * Implements hook_permission().
 */
function multisite_forum_core_permission() {
  return array(
    'moderate forums' => array(
      'title' => t('Moderate forums'),
      'description' => t('Manage forum topics and comments.'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function multisite_forum_core_node_access($node, $op, $account) {
  if ($op == 'update' || $op == 'delete') {
    if (user_access('moderate forums')) {
      return NODE_ACCESS_ALLOW;
    }
  }
  return NODE_ACCESS_IGNORE;
}

/**
 * Replaces drupal strings by forum vocabulary.
 */
function multisite_forum_core_replace_strings() {
  $nid = NULL;

  $path_array = explode('/', $_GET['q']);

  if (in_array(MULTISITE_FORUM_CORE_CT_NAME, $path_array)
          || in_array('node', $path_array)
          || in_array('comment', $path_array)) {

    $language_prefix = db_select('languages', 'l')
      ->fields('l', array('prefix'))
      ->execute()
      ->fetchAll(PDO::FETCH_COLUMN);

    // en/discussion/$nid.
    if (in_array($path_array[0], $language_prefix)) {
      unset($path_array[0]);
      $url = implode('/', $path_array);
      $path_array = explode('/', $url);
    }
    // node/$nid.
    else {
      $url = $_GET['q'];
    }

    switch ($path_array[0]) {
      // node/$nid/*.
      case 'node':
        if (isset($path_array[1]) && is_numeric($path_array[1])) {
          $nid = $path_array[1];
        }
        break;

      // discussion/$node_title.
      case 'discussion':
        $source = db_select('url_alias', 'a')
          ->fields('a', array('source'))
          ->condition('a.alias', $url)
          ->execute()
          ->fetch(PDO::FETCH_COLUMN);

        if (strstr($source, 'node/') !== FALSE) {
          list(, $nid) = explode('/', $source);
        }
        break;

      case 'comment':
        // comment/reply/$nid.
        if ($path_array[1] == 'reply') {
          $nid = (int) $path_array[2];
        }
        // comment/$cid.
        else {
          $cid = (int) $path_array[1];
          $nid = db_select('comment', 'c')
            ->fields('c', array('nid'))
            ->condition('c.cid', $cid)
            ->execute()
            ->fetch(PDO::FETCH_COLUMN);
        }
        break;
    }

    if ($nid) {
      $nid = (int) $nid;
      $type = db_select('node', 'n')
        ->fields('n', array('type'))
        ->condition('n.nid', $nid)
        ->execute()
        ->fetch(PDO::FETCH_COLUMN);

      if ($type == MULTISITE_FORUM_CORE_CT_NAME) {
        global $conf;
        $conf['locale_custom_strings_en'][''] = array(
          'Add new comment' => 'Add new reply',
          'Comments' => 'Replies',
          'Comment' => 'Reply',
          'Full comment' => 'Full reply',
          'Recent comments' => 'Recent replies',
          'No comments available' => 'No replies available',
          '1 comment' => '1 reply',
          '@count comments' => '@count comments',
          'Jump to the first comment of this posting.' => 'Jump to the first reply of this posting.',
          'Add a new comment to this page.' => 'Add a new reply to this page.',
          'Publish the selected comments' => 'Publish the selected replies',
          'Delete the selected comments' => 'Delete the selected replies',
          'Edit comment %comment' => 'Edit reply %comment',
          'Are you sure you want to delete the comment %title?' => 'Are you sure you want to delete the reply %title?',
          'Any replies to this comment will be lost. This action cannot be undone.' => 'Any replies to this reply will be lost. This action cannot be undone.',
          'Comment settings' => 'Reply settings',
          'Comments per page' => 'Replies per page',
          'Allow comment title' => 'Allow reply title',
          'Show reply form on the same page as comments' => 'Show reply form on the same page as other replies',
          'Preview comment' => 'Preview reply',
          'Comment settings' => 'Reply settings',
          'Publish comment' => 'Publish reply',
          'Unpublish comment' => 'Unpublish reply',
          'Unpublish comment containing keyword(s)' => 'Unpublish reply containing keyword(s)',
          'Save comment' => 'Save reply',
          'Number of comments' => 'Number of replies',
          '<a href="@login">Log in</a> to post comments' => '<a href="@login">Log in</a> to post replies',
          '<a href="@login">Log in</a> or <a href="@register">register</a> to post comments' => '<a href="@login">Log in</a> or <a href="@register">register</a> to post replies',
          'Users with the "Post comments" permission can post comments.' => 'Users with the "Post comments" permission can post replies.',
          'Users cannot post comments.' => 'Users cannot post replies.',
          'Your comment has been posted.' => 'Your reply has been posted.',
        );
      }
    }
  }
}

/**
 * Implements hook_workbench_create_alter().
 *
 * Rewrite workbench create page : hide forum link.
 *
 * @see workbench_create()
 */
function multisite_forum_core_workbench_create_alter(&$output) {
  // $output['#markup'] contains html : recreate #markup from scratch
  // (see _workbench_create()) without Discussion link.
  $output = array();
  $output['#markup'] = '<h3 class="ecl-heading ecl-heading--h3">' . t('Create content') . '</h3>';

  $item = menu_get_item('node/add');
  $contents = system_admin_menu_block($item);

  // Remove Discussion link.
  foreach ($contents as $key => $content) {
    if ($content['link_path'] == 'node/add/' . MULTISITE_FORUM_CORE_CT_NAME) {
      unset($contents[$key]);
    }
  }
  if (!empty($contents)) {
    // Theme the arrray of content type creation links.
    $output['#markup'] .= theme('node_add_list', array('content' => $contents));
  }
  else {
    $output['#markup'] .= t('You cannot create any new content. Please contact the site administrator.');
  }
}


/**
 * Implements hook_node_load().
 */
function multisite_forum_core_node_load($nodes, $types) {
  // Path module is stupid and doesn't load its data in node_load.
  // @see workbench_moderation_node_data.
  if (module_exists('path')) {
    foreach ($nodes as $node) {
      if (isset($node->nid)) {
        $path = array();
        $conditions = array('source' => 'node/' . $node->nid);
        if ($node->language != LANGUAGE_NONE) {
          $conditions['language'] = $node->language;
        }
        $path = path_load($conditions);
        if ($path === FALSE) {
          $path = array();
        }
        if (isset($node->path)) {
          $path += $node->path;
        }
        $path += array(
          'pid' => NULL,
          'source' => 'node/' . $node->nid,
          'alias' => '',
          'language' => isset($node->language) ? $node->language : LANGUAGE_NONE,
        );
        $node->path = $path;
      }
    }
  }
}
