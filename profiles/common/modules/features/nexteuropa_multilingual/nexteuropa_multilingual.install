<?php
/**
 * @file
 * Nexteuropa_multilingual install file.
 */

 /**
  * Implements hook_requirements().
  */
function nexteuropa_multilingual_requirements() {
  $requirements = [];
  if (module_exists('multisite_drupal_language_negociation')) {
    $t = get_t();
    $args = array('%module' => 'Multisite Drupal Language Negociation');
    $requirements['nexteuropa_multilingual_module_conflict'] = [
      'title' => 'NextEuropa Multilingual',
      'description' => $t('This module is not compatible with %module. Please disable that module first.', $args),
      'severity' => REQUIREMENT_ERROR,
    ];
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function nexteuropa_multilingual_install() {

  // Setting default English prefix.
  multisite_config_service('locale')->setLanguagePrefix('en', 'en');

  // Set "administrator" permissions.
  $permissions = array(

    // String translation.
    'translate user-defined strings',
    'translate admin strings',

    // Entity Translation.
    'translate any entity',

    // Locale.
    'translate interface',

    // Translation Management Core.
    'administer tmgmt',
    'create translation jobs',
    'submit translation jobs',
    'accept translation jobs',
  );
  multisite_config_service('user')->grantPermission('administrator', $permissions);

  // Set nexteuropa_multilingual_url_suffix as default language negotiation.
  multisite_config_service('locale')->setLanguageNegotiation('nexteuropa_multilingual_url_suffix');

  // Set translatable states for TMGMT Workbench module.
  multisite_config_service('system')->setVariable('tmgmt_workbench_moderation_states', array('validated', 'published'));

  // IPG URL rules : use the token [node:source:title] to have always the
  // english title in the URL.
  variable_set('pathauto_node_pattern', 'content/[node:source:title]');

  // Remove old language switcher block.
  multisite_drupal_toolbox_remove_block_context('site_wide', 'language');
  multisite_drupal_toolbox_remove_block_context('site_wide', 'locale-language');

  // Set the warning message when changing node state.
  variable_set('nexteuropa_multilingual_warning_message_languages', "The state of the content <b>[node:title]</b> and all its validated translations <b>[node:entity-translation-languages]</b> will be updated!");
}

/**
 * Implements hook_disable().
 */
function nexteuropa_multilingual_disable() {
  // Remove block from context.
  multisite_drupal_toolbox_remove_block_context('site_wide', 'language_selector_site');
  multisite_drupal_toolbox_remove_block_context('site_wide', 'language_selector_page');

  // Disable modules.
  module_disable(array('language_selector_site'), FALSE);
  module_disable(array('language_selector_page'), FALSE);
}

/**
 * NEXTEUROPA-9937: Normalizes the "warning_message_languages" variable name.
 */
function nexteuropa_multilingual_update_7001() {
  $old_variable = variable_get('warning_message_languages');
  variable_set('nexteuropa_multilingual_warning_message_languages', $old_variable);
  variable_del('warning_message_languages');
}
