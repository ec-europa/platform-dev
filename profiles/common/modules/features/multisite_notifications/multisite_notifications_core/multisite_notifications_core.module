<?php

/**
 * @file
 * Code for the multisite_notifications_core feature.
 */

include_once 'multisite_notifications_core.features.inc';


/**
 * Implements hook_subscriptions_queue_alter().
 */
function multisite_notifications_core_subscriptions_queue_alter(&$event) {
  // Is workbench_moderation overriding the workflow?
  if (isset($event['node']->workbench_moderation)) {
    // Only process events after publishing
    // See multisite_notifications_core_workbench_moderation_transition()
    if (!isset($event['node']->is_to_add_to_subscription)) {
      $event = NULL;
    }
  }
  elseif (isset($event['node']->status)) {
    // No workbench moderation workflow.
    if ($event['node']->status != 1) {
      $event = NULL;
    }
  }
}

/**
 * Implements hook_workbench_moderation_transition().
 */
function multisite_notifications_core_workbench_moderation_transition($node, $previous_state, $new_state) {
  // Only process events after publishing
  // See multisite_notifications_core_subscriptions_queue_alter()
  if ($new_state == workbench_moderation_state_published()) {
    $full_node = node_load($node->nid);
    $full_node->is_to_add_to_subscription = TRUE;
    subscriptions_content_node_update($full_node);
  }
}

/**
 * Implements hook_mail().
 *
 * Now when drupal_mail() is called and passed $key and $module,
 * the appropriate body and subject will be filled in before the mail is sent.
 */
function multisite_notifications_core_mail($key, &$message, $params) {
  global $language;
  global $base_url;

  switch ($key) {
    case 'subscription':
      $message['subject'] = variable_get('subscribe_subject_' . $language->language, 'Please confirm your subscription');
      $message['body'][] = variable_get('subscribe_message_' . $language->language, 'Please confirm your subscription by clicking the link provided by this mail.');
      // @todo integrate with tokens.
      // @todo make $params an associative array.
      $message['body'][] = $base_url . '/subscribe/' . $params[1];
      break;

    case 'unsubscription':
      $message['subject'] = variable_get('unsubscribe_subject_' . $language->language, 'Please confirm your unsubscription');
      $message['body'][] = variable_get('unsubscribe_message_' . $language->language, 'Please confirm your unsubscription by clicking the link provided by this mail.');
      $message['body'][] = $base_url . '/unsubscribe/' . $params[1];
      break;

  }
}

/**
 * User who filled in the form is entitled to receive the updates.
 */
function _multisite_notifications_core_insert_notification_defaults($uid) {
  // Provide default settings values for subscriptions.
  db_update('subscriptions_user')
    ->fields(array(
      'digest' => 0,
      'send_interval' => 1,
      'send_updates' => 1,
      'send_comments' => 1,
      'send_interval_visible' => 1,
      'send_updates_visible' => 1,
      'send_comments_visible' => 1,
      'autosub_on_post' => 0,
      'autosub_on_update' => 0,
      'autosub_on_comment' => 0,
      'send_self' => 1,
      'suspended' => 0,
    ))
    ->condition('uid', $uid)
    ->execute();
}
