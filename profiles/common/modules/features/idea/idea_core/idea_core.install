<?php

/**
 * @file
 * Install the feature idea.
 */

/**
 * Implements hook_install().
 */
function idea_core_install() {
  // Create a vocabulary dedicated to the categories.
  $vocabulary = (object) array(
    'name' => 'Idea categories',
    'machine_name' => 'idea_categories',
    'module' => 'idea_core',
  );
  taxonomy_vocabulary_save($vocabulary);

  // Add default categories.
  $vocabulary = taxonomy_vocabulary_machine_name_load('idea_categories');
  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Communication',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Improvements',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Legislation',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Resources',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Services',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Other',
  );
  taxonomy_term_save($term);

  // Create a vocabulary dedicated to the status.
  $vocabulary = (object) array(
    'name' => 'Idea status',
    'machine_name' => 'idea_status',
    'module' => 'idea_core',
  );
  taxonomy_vocabulary_save($vocabulary);

  // Add default categories.
  $vocabulary = taxonomy_vocabulary_machine_name_load('idea_status');

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Current Activity',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'In Action',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'No Status',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Unable to Implement',
  );
  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Under Review',
  );
  taxonomy_term_save($term);

  // Use soft config for idea comment form location.
  multisite_config_service('comment')->setReplyFormCommentForContentType('idea', 0);
  // Use soft config to allow comments from authenticated users.
  multisite_config_service('comment')->setDefaultCommentForContentType('idea', 'open');
  // Use soft config to allow idea comment threading.
  multisite_config_service('comment')->setThreadingCommentForContentType('idea', 1);
  // Use soft config for idea comment title.
  multisite_config_service('comment')->setTitleCommentForContentType('idea', 0);
  // Use soft config for preview idea comment.
  multisite_config_service('comment')->setPreviewCommentForContentType('idea', 1);
  // Use soft config to set number of comments per page.
  multisite_config_service('comment')->setNumberCommentForContentType('idea', '50');
  // Use soft config for anonymous comments.
  multisite_config_service('comment')->setAnonymousCommentForContentType('idea', 0);

  $cem_permissions = array(
    'view rate results page',
  );
  $all_permissions = array_keys(module_invoke_all('permission'));
  multisite_config_service('user')->grantPermission(CCE_BASIC_CONFIG_CEM_ROLE_NAME, array_intersect($all_permissions, $cem_permissions));
}

/**
 * Implements hook_uninstall().
 */
function idea_core_uninstall() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('idea_categories');
  taxonomy_vocabulary_delete($vocabulary->vid);
}

/**
 * Add block to the context.
 */
function idea_core_enable() {
  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('idea', 'add');

  // Add type to linkchecker scan.
  multisite_drupal_toolbox_content_type_linkchecker('idea', 'add');

  // Add rating.
  multisite_drupal_toolbox_rate_content_type('idea', 'add');

  // Activation message.
  drupal_set_message(t('Idea feature is now active on your site.'));
}

/**
 * Remove block from the context.
 */
function idea_core_disable() {
  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('idea', 'delete');

  // Remove type to linkchecker scan.
  multisite_drupal_toolbox_content_type_linkchecker('idea', 'delete');

  // Remove rating.
  multisite_drupal_toolbox_rate_content_type('idea', 'delete');

  // Activation message.
  drupal_set_message(t('Idea feature is now disabled on your site.'));
}

/**
 * Add default tags to feature vocabularies..
 */
function idea_core_update_7120() {
  // Add default categories.
  $vocabulary = taxonomy_vocabulary_machine_name_load('idea_categories');
  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Communication',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Improvements',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Legislation',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Resources',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Services',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Other',
  );
  taxonomy_term_save($term);

  // Add default categories.
  $vocabulary = taxonomy_vocabulary_machine_name_load('idea_status');

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Current Activity',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'In Action',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'No Status',
  );
  taxonomy_term_save($term);

  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Unable to Implement',
  );
  $term = (object) array(
    'vid' => $vocabulary->vid,
    'name' => 'Under Review',
  );
  taxonomy_term_save($term);
}

/**
 * Set new value for idea_core feature in database.
 *
 * Variables from comments settings must be removed from hard config.
 * Recreate the value of the feature in database without the variable.
 */
function idea_core_update_7121() {
  module_load_include('inc', 'features', "features.export");
  features_set_signature('idea_core', 'variable');
}
