<?php

/**
 * @file
 * Code for the F.A.Q feature.
 */

include_once 'f_a_q.features.inc';

/**
 * Implements hook_views_pre_render().
 */
function f_a_q_views_pre_render(&$view) {
  if ($view->name == 'faq') {

    // Add a bit of jQuery to make it work.
    drupal_add_js(drupal_get_path('module', 'f_a_q') . '/faq.js');

    $output = '';

    // Build extra menu item for this view.
    $attributes = array(
      'type' => 'expand',
      'action_bar' => 'first',
      'btn_group' => 'first',
      'class' => 'action-expand',
    );
    $output .= l(t('Expand all'), '', array('attributes' => $attributes));
    $attributes = array(
      'type' => 'collapse',
      'btn_group' => 'last',
      'class' => 'action-collapse',
    );
    $output .= l(t('Collapse all'), '', array('attributes' => $attributes));

    // Add menu to the exsiting  header.
    $view->header['area']->options['content'] = $view->header['area']->options['content'] . $output;
  }
}


/**
 * Implements hook_token_info().
 */
function f_a_q_token_info() {
  $info['types']['Breadcrumb_faq'] = array(
    'name' => 'Breadcrumb_faq',
    'description' => 'Tokens related to Breadcrumb.',
  );
  $info['tokens']['Breadcrumb_faq']["f_a_q_title"] = array(
    'name' => t("f_a_q Breadcrumb title"),
    'description' => t("The Breadcrumb title of the f_a_q."),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function f_a_q_tokens($type, $tokens, $data = array(), $options = array()) {
  $replacements = array();
  $sanitize = !empty($options['sanitize']);

  // Tokens for e_libray_core Breadcrumb.
  if ($type == 'Breadcrumb_faq') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'f_a_q_title':
          $replacements[$original] = t("f_a_q");
          break;
      }
    }
  }
  return $replacements;
}
