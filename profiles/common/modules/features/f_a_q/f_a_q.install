<?php

/**
 * @file
 * Install the feature f_a_q.
 */

/**
 * Implements hook_install().
 */
function f_a_q_install() {
  // Create a vocabulary dedicated to the faq.
  $t = get_t();
  $vocabulary = (object) array(
    'name' => $t('FAQ categories'),
    'machine_name' => 'faq_categories',
    'module' => 'faq',
  );
  taxonomy_vocabulary_save($vocabulary);
}

/**
 * Implements hook_uninstall().
 */
function f_a_q_uninstall() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('faq_categories');
  taxonomy_vocabulary_delete($vocabulary->vid);
}

/**
 * Implements hook_enable().
 */
function f_a_q_enable() {
  $t = get_t();
  drupal_set_message($t('FAQ enabled'));

  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('f_a_q', 'add');

  // Add type to linkchecker scan.
  multisite_drupal_toolbox_content_type_linkchecker('f_a_q', 'add');

  // Activation message.
  drupal_set_message(t('Faq is now active on your site.'));
}

/**
 * Implements hook_modules_enabled().
 */
function f_a_q_modules_enabled($modules) {
  node_types_rebuild();
}

/**
 * Implements hook_disable().
 */
function f_a_q_disable() {
  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('f_a_q', 'delete');

  // Remove type to linkchecker scan.
  multisite_drupal_toolbox_content_type_linkchecker('f_a_q', 'delete');

  // Get role_id for the role.
  $role_name = 'contributor';
  $roles = user_roles(TRUE);
  $role_id = array_search($role_name, $roles);

  user_role_revoke_permissions($role_id, array(
    'create f_a_q content',
    'edit any f_a_q content',
    'delete any f_a_q content',
  ));

  // Activation message.
  drupal_set_message(t('Faq is now disabled on your site.'));
}
