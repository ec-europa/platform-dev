<?php

/**
 * @file
 * Insert readspeaker capabilities to selected node types.
 *
 * @ingroup readspeaker
 */

/**
 * Returns ReadSpeaker supported languages.
 *
 * Switch between 'en_us' and 'en_uk' if configured.
 */
function _multisite_readspeaker_language_list() {

  $readspeaker_languages = array(
    'ar' => array(
      'langid' => 'ar_ar',
      'alttext' => urldecode('ReadSpeaker%20%D8%A7%D9%8E%D8%B3%D8%AA%D9%85%D8%B9%D9%8F%20%D8%A5%D9%84%D9%89%20%D9%87%D8%B0%D9%87%20%D8%A7%D9%84%D8%B5%D9%81%D8%AD%D8%A9%D9%90%20%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D8%A7'),
    ),
    'ca' => array(
      'langid' => 'ca_es',
      'alttext' => 'Escolteu aquesta plana utilitzant ReadSpeaker',
    ),
    'da' => array(
      'langid' => 'da_dk',
      'alttext' => 'Lyt til denne side med ReadSpeaker',
    ),
    'de' => array(
      'langid' => 'de_de',
      'alttext' => 'Um den Text anzuh&ouml;ren, verwenden Sie bitte ReadSpeaker',
    ),
    'en' => array(
      'langid' => 'en_us',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'es' => array(
      'langid' => 'es_es',
      'alttext' => 'Escucha esta p&aacute;gina utilizando ReadSpeaker',
    ),
    'eu' => array(
      'langid' => 'es_eu',
      'alttext' => 'Orri hau entzun ReadSpeaker erabiliz',
    ),
    'fi' => array(
      'langid' => 'fi_fi',
      'alttext' => 'Kuuntele ReadSpeakerilla',
    ),
    'fo' => array(
      'langid' => 'fo_fo',
      'alttext' => 'Lurta eftir tekstinum &aacute; s&iacute;&eth;uni vi&eth; ReadSpeaker',
    ),
    'fr' => array(
      'langid' => 'fr_fr',
      'alttext' => 'Ecoutez le texte avec ReadSpeaker',
    ),
    'fy' => array(
      'langid' => 'fy_nl',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'gl' => array(
      'langid' => 'gl_es',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'el' => array(
      'langid' => 'el_gr',
      'alttext' => urldecode('%CE%91%CE%BA%CE%BF%CF%8D%CF%83%CF%84%CE%B5%20%CE%B1%CF%85%CF%84%CE%AE%CE%BD%20%CF%84%CE%B7%CE%BD%20%CF%83%CE%B5%CE%BB%CE%AF%CE%B4%CE%B1%20%CF%87%CF%81%CE%B7%CF%83%CE%B9%CE%BC%CE%BF%CF%80%CE%BF%CE%B9%CF%8E%CE%BD%CF%84%CE%B1%CF%82%20ReadSpeaker'),
    ),
    'hi' => array(
      'langid' => 'hi_in',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'it' => array(
      'langid' => 'it_it',
      'alttext' => 'Ascolta questa pagina con ReadSpeaker',
    ),
    'jp' => array(
      'langid' => 'ja_jp',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'ko' => array(
      'langid' => 'ko_kr',
      'alttext' => 'Listen to this page using ReadSpeaker',
    ),
    'nl' => array(
      'langid' => 'nl_nl',
      'alttext' => 'Laat de tekst voorlezen met ReadSpeaker',
    ),
    'nb' => array(
      'langid' => 'no_nb',
      'alttext' => 'Lytt til denne siden med ReadSpeaker',
    ),
    'pt-pt' => array(
      'langid' => 'pt_pt',
      'alttext' => 'Ouvir com ReadSpeaker',
    ),
    'pt' => array(
      'langid' => 'pt_pt',
      'alttext' => 'Ouvir com ReadSpeaker',
    ),
    'ru' => array(
      'langid' => 'ru_ru',
      'alttext' => urldecode('%D0%9F%D1%80%D0%BE%D1%81%D0%BB%D1%83%D1%88%D0%B0%D1%82%D1%8C%20%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D1%83%20%D0%BF%D1%80%D0%B8%20%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D0%B8%20ReadSpeaker'),
    ),
    'sv' => array(
      'langid' => 'sv_se',
      'alttext' => 'Lyssna p&aring; sidans text med ReadSpeaker',
    ),
    'tr' => array(
      'langid' => 'tr_tr',
      'alttext' => urldecode('Bu%20sayfay%C4%B1%20ReadSpeaker%20ile%20dinle'),
    ),
    'zh' => array(
      'langid' => 'zh_cn',
      'alttext' => urldecode('%E8%AE%A9ReadSpeaker%E4%B8%BA%E4%BD%A0%E6%9C%97%E8%AF%BB%E9%A1%B5%E9%9D%A2'),
    ),
  );

  $readspeaker_prefer_uk = variable_get('readspeaker_prefer_uk', TRUE);
  if ($readspeaker_prefer_uk) {
    $readspeaker_languages['en']['langid'] = 'en_uk';
  }

  return $readspeaker_languages;
}

/**
 * Implements hook_menu().
 *
 * Insert 'ReadSpeaker' link into content management menu.
 */
function multisite_readspeaker_menu() {
  $items = array();
  $items['admin/config/content/multisite_readspeaker'] = array(
    'title' => 'ReadSpeaker Enterprise Highlighting',
    'description' => 'Insert ReadSpeaker Enterprise Highlighting to selected node types.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multisite_readspeaker_form'),
    'access arguments' => array('administer multisite_readspeaker'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Page callback: Current posts settings.
 *
 * @see current_posts_menu()
 */
function multisite_readspeaker_form($form, &$form_state) {
  $form['general_settings'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('General settings for ReadSpeaker'),
    '#description' => t('The ReadSpeaker module requires an own account at <a href="http://www.readspeaker.com" target="_blank">ReadSpeaker</a>.'),
  );

  $form['general_settings']['readspeaker_accountid'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter your ReadSpeaker ID'),
    '#default_value' => variable_get('readspeaker_accountid', ''),
    '#description' => t('Enter your ReadSpeaker ID from <a href="https://admin.readspeaker.com/portal" target="_blank">https://admin.readspeaker.com/portal</a>.'),
    '#required' => TRUE,
  );

  $form['general_settings']['readspeaker_readid'] = array(
    '#type' => 'textfield',
    '#title' => t('Reading area'),
    '#default_value' => variable_get('readspeaker_readid', 'block-system-main'),
    '#description' => t('Specify content using HTML ID attribute<br />Example: To read the DIV with id="maincontent", maincontent'),
    '#required' => TRUE,
  );

  $form['general_settings']['readspeaker_langid'] = array(
    '#type' => 'select',
    '#title' => t('Language'),
    '#default_value' => variable_get('readspeaker_langid', ''),
    '#options' => array(
      'en' => t('English'),
      'ar' => t('Arabic'),
      'eu' => t('Basque'),
      'ca' => t('Catalan'),
      'da' => t('Danish'),
      'nl' => t('Dutch'),
      'fo' => t('Faroese'),
      'fi' => t('Finnish'),
      'fr' => t('French'),
      'fy' => t('Frisian'),
      'gl' => t('Galician'),
      'de' => t('German'),
      'el' => t('Greek'),
      'hi' => t('Hindi'),
      'it' => t('Italian'),
      'jp' => t('Japanese'),
      'ko' => t('Korean'),
      'zh' => t('Mandarin Chinese'),
      'nb' => t('Norwegian'),
      'pt' => t('Portuguese'),
      'ru' => t('Russian'),
      'es' => t('Spanish'),
      'se' => t('Swedish'),
      'tr' => t('Turkish'),
    ),
    '#description' => t('Select which language your ReadSpeaker account supports.'),
    '#required' => TRUE,
  );
  $form['general_settings']['readspeaker_prefer_uk'] = array(
    '#type' => 'checkbox',
    '#title' => t('Prefer british english'),
    '#default_value' => variable_get('readspeaker_prefer_uk', TRUE),
    '#description' => t('Check this option, if you prefer british english and it is available on your account.'),
    '#required' => FALSE,
  );

  // Layout settings for input ReadSpeaker into node.
  $form['layout_settings'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Layout settings'),
    '#description' => t('Options to control display position of readspeaker on your website.'),
  );
  $form['layout_settings']['readspeaker_buttonstyle'] = array(
    '#type' => 'textfield',
    '#title' => t('Style attribute for the ReadSpeaker Button.'),
    '#default_value' => variable_get('readspeaker_buttonstyle', FALSE),
    '#description' => t('Set a style attribute for the ReadSpeaker Button.'),
    '#required' => FALSE,
  );
  // What kinds of nodes do we want to read by ReadSpeaker.
  $form['display_settings'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Display settings'),
    '#description' => t('<p>This module provides you with a block, containing the player button.</p><p>You also have the option to display it only on select content types and taxonomy term pages of select vocabularies. In this case the button is rendered as the first item in the content of the node/term</p><p><strong>Attention! These two options are available simultaneously, so improper settings may result in having two buttons on the same page.</strong></p>'),
  );

  $form['display_settings']['readspeaker_nodes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Content types'),
    '#default_value' => variable_get('readspeaker_nodes', array()),
    '#options' => array_map('check_plain', node_type_get_names()),
    '#description' => t('Select content types to read by ReadSpeaker.'),
  );
  $vocabularies = array();
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    $vocabularies[$vocabulary->machine_name] = $vocabulary->name;
  }

  $form['display_settings']['readspeaker_vocabularies'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Taxonomy term pages'),
    '#default_value' => variable_get('readspeaker_vocabularies', array()),
    '#options' => array_map('check_plain', $vocabularies),
    '#description' => t('Taxonomy term pages to read by ReadSpeaker in these vocabularies'),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_permission().
 *
 * Insert 'display ReadSpeaker' permission.
 */
function multisite_readspeaker_permission() {
  return array(
    'display multisite_readspeaker' => array(
      'title' => t('display ReadSpeaker'),
    ),
    'administer multisite_readspeaker' => array(
      'title' => t('administer ReadSpeaker'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function multisite_readspeaker_block_info() {
  $blocks = array();
  $blocks['readspeaker_player'] = array(
    'info' => t('Readspeaker Player'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function multisite_readspeaker_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'readspeaker_player':
      $block['subject'] = NULL;
      $block['content'] = theme('multisite_readspeaker_button');
      break;
  }
  return $block;
}

/**
 * Implements hook_node_view().
 *
 * Insert 'ReadSpeaker' button in the node.
 */
function multisite_readspeaker_node_view($node, $build_mode = 'full') {
  $node_types = variable_get('readspeaker_nodes', array());
  $accountid = variable_get('readspeaker_accountid', '');
  if ($build_mode == 'full' && !empty($node_types[$node->type]) && !empty($accountid)) {
    $node->content['readspeaker_hl'] = array(
      '#type' => 'markup',
      '#theme' => 'multisite_readspeaker_button',
      '#weight' => -1,
    );
  }
}

/**
 * Implements hook_taxonomy_term_view_alter().
 *
 * Insert 'ReadSpeaker' button in the taxonomy term.
 */
function multisite_readspeaker_taxonomy_term_view_alter(&$build) {
  $readspeaker_vocabularies = variable_get('readspeaker_vocabularies', array());
  $vocabulary = $build['#term']->vocabulary_machine_name;
  $accountid = variable_get('readspeaker_accountid', '');
  if ($build['#view_mode'] == 'full' && !empty($readspeaker_vocabularies[$vocabulary]) && !empty($accountid)) {
    // Change its weight.
    $build['multisite_readspeaker'] = array(
      '#type' => 'markup',
      '#theme' => 'multisite_readspeaker_button',
      '#weight' => -1,
    );
  }
}

/**
 * Implements hook_theme().
 */
function multisite_readspeaker_theme() {
  return array(
    'multisite_readspeaker_button' => array(
      'variables' => array('node' => NULL),
    ),
  );
}

/**
 * Implements the ReadSpeaker Button.
 */
function theme_multisite_readspeaker_button() {

  if (user_access('display multisite_readspeaker')) {
    global $language;
    global $base_path;

    $accountid = variable_get('readspeaker_accountid', '');
    $node = menu_get_object();
    if (isset($_SERVER["HTTPS"])) {
      $protocol = 'https';
    }
    else {
      $protocol = 'http';
    }
    if (variable_get('readspeaker_buttonstyle', FALSE)) {
      $button_style = " style='" . variable_get('readspeaker_buttonstyle', FALSE) . "'";
    }
    else {
      $button_style = "";
    }

    // Set the default readspeaker language.
    $readspeaker_languages = _multisite_readspeaker_language_list();
    $default_langid        = variable_get('readspeaker_langid', FALSE);
    $readspeaker_langcode  = $readspeaker_languages[$default_langid]['langid'];

    // Detect node language or drupal language in case
    // node is neutral or not a node.
    if ($node && $node->language !== LANGUAGE_NONE) {
      $langid = $node->language;
    }
    else {
      $langid = $language->language;
    }
    // If current language is defined in the settings,
    // use the appropriate language instead of default.
    if (isset($readspeaker_languages[$langid])) {
      // @TODO the language might not be available for the current readspeaker account
      $readspeaker_langcode = $readspeaker_languages[$langid]['langid'];
    }

    // Add javascript to header.
    drupal_add_library('multisite_readspeaker', 'readspeaker_hl');

    $path = url(current_path(), array('https' => ($protocol == 'https'), 'absolute' => TRUE));
    $read_id = variable_get('readspeaker_readid', 'block-system-main');

    // Create output.
    $output = '<!-- RS_MODULE_CODE -->';
    $output .= '<div id="readspeaker_button1" class="rs_skip rsbtn rs_preserve"' . $button_style . '>
    <a class="rsbtn_play" accesskey="L" title="Listen to this page using ReadSpeaker" href="' . $protocol . '://app.eu.readspeaker.com/cgi-bin/rsent?customerid=' . $accountid . '&amp;lang=' . $readspeaker_langcode . '&amp;readid=' . $read_id . '&amp;url=' . urlencode($path) . '">
        <span class="rsbtn_left rsimg rspart"><span class="rsbtn_text"><span>Listen</span></span></span>
        <span class="rsbtn_right rsimg rsplay rspart"></span>
    </a>
</div>';

    return $output;
  }
}

/**
 * Implements hook_library().
 */
function multisite_readspeaker_library() {
  // Use absolute path otherwise query string is broken by drupal_add_js().
  global $base_url;
  $library_path = $base_url . '/' . drupal_get_path('module', 'multisite_readspeaker') . '/js/ReadSpeaker/ReadSpeaker.js?pids=embhl';

  $libraries['readspeaker_hl'] = array(
    'title'   => 'ReadSpeaker Enterprise Highlighting',
    'website' => 'http://www.readspeaker.com/',
    'version' => '2.5',
    'js'      => array(
      $library_path => array(),
    ),
  );

  return $libraries;
}
