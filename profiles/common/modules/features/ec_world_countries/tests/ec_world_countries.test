<?php

/**
 * @file
 * Tests for ec_world_countries.module.
 */

/**
 * Defines a base class for testing the "Ask a question" module.
 */
class EcWorldCountriesTestCase extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'EC world countries feature',
      'description' => 'Test the EC world countries feature.',
      'group' => 'Multisite Core Features',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp('ec_world_countries');
    $vid = taxonomy_vocabulary_machine_name_load('ec_world_countries')->vid;
    $this->adminUser = $this->drupalCreateUser(
      array(
        'access content',
        'administer users',
        'administer site configuration',
        'administer taxonomy',
        'administer nodes',
        'administer blocks',
        "edit terms in {$vid}",
        "delete terms in {$vid}",
      )
    );
  }

  /**
   * {@inheritdoc}
   */
  public function testVocabularyAvailability() {
    $this->drupalLogin($this->adminUser);
    $this->drupalGet('admin/structure/taxonomy/ec_world_countries');
    $this->assertResponse(200);
  }

  /**
   * Tests the availibility of (some) fields in the taxonomy term form.
   */
  public function testTermFormAvailability() {
    $this->drupalLogin($this->adminUser);
    $this->drupalGet("admin/structure/taxonomy/ec_world_countries/add");
    $this->assertText('ISO 3166-1 alpha-2 code', 'ISO 3166-1 alpha-2 code field found on the term edit form.');
  }

  /**
   * Tests service endpoint.
   */
  public function testViewAvailability() {
    $this->drupalLogin($this->adminUser);
    $this->drupalGet('ec-world-countries');
    $this->assertText('EC world countries', 'View title EC world countries found.');
    $this->assertText('ISO 3166-1 alpha-2 code', 'Column header ISO 3166-1 alpha-2 code label found');
    $this->assertText('Antigua and Barbuda', 'Antigua and Barbuda found.');
    $this->assertText('BZ', 'BZ found.');
    $this->assertText('North America', 'North America found.');
  }

  /**
   * Tests inserting a country.
   */
  public function testTermCreation() {
    $this->drupalLogin($this->adminUser);
    $edit = array(
      'name' => 'Limburg',
      'iso_3166_1_alpha_2_code[und][0][value]' => 'LI',
      'description[value]' => 'The independant republic of Limburg, Alaaf!',
    );
    $this->drupalPost('admin/structure/taxonomy/ec_world_countries/add', $edit, t('Save'));
    $this->assertText('Created new term Limburg.');
  }

}
