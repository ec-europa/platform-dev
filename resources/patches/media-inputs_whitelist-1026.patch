diff --git a/media.module b/media.module
index 1f97bcb..9b7f53b 100644
--- a/media.module
+++ b/media.module
@@ -818,6 +818,13 @@ function media_element_process($element, &$form_state, $form) {
   // Media browser attach code.
   $element['#attached']['js'][] = drupal_get_path('module', 'media') . '/js/media.js';
 
+  // Caching field settings for security reason.
+  $cid = drupal_get_token(drupal_random_bytes(32));
+  cache_set('media_options:' . $cid, $element['#media_options']['global'], 'cache_form', REQUEST_TIME + 21600);
+
+  // Add the security token to the media options sent with the upload form.
+  $element['#media_options']['global']['media_token'] = $cid;
+
   // Add the media options to the page as JavaScript settings.
   $element['browse_button']['#attached']['js'] = array(
     array(
@@ -1196,11 +1203,32 @@ function media_set_browser_params() {
   if (empty($params)) {
     // Build out browser settings. Permissions- and security-related behaviors
     // should not rely on these parameters, since they come from the HTTP query.
-    // @TODO make sure we treat parameters as user input.
-    $params = drupal_get_query_parameters() + array(
-        'types' => array(),
-        'multiselect' => FALSE,
-      );
+    // There are two ways of passing secure data:
+    // - Store the options in the 'cache_form' cache bin, using a random key
+    //   prefixed with 'media_options:'. Pass the random key in the 'options'
+    //   query argument.
+    // - Inject the options by altering the browser parameters.
+    //   @see hook_media_browser_params_alter()
+    $params = drupal_get_query_parameters();
+
+    // Filter out everything except a whitelist of known safe options.
+    $safe_options = array(
+      'activePlugins',
+      'fid',
+      'id',
+      'multiselect',
+      'options',
+      'plugins',
+      'render',
+      'types',
+      'media_token',
+    );
+    $params = array_intersect_key($params, array_flip($safe_options));
+
+    // Retrieve the security sensitive options from the cache.
+    if (!empty($params['media_token']) && is_string($params['media_token']) && $options = cache_get('media_options:' . $params['media_token'], 'cache_form')) {
+      $params = $options->data;
+    }
 
     // Transform text 'true' and 'false' to actual booleans.
     foreach ($params as $k => $v) {
@@ -1214,6 +1242,12 @@ function media_set_browser_params() {
 
     array_walk_recursive($params, 'media_recursive_check_plain');
 
+    // Provide some default parameters.
+    $params += array(
+      'types' => array(),
+      'multiselect' => FALSE,
+    );
+
     // Allow modules to alter the parameters.
     drupal_alter('media_browser_params', $params);
   }
diff --git a/modules/media_wysiwyg/media_wysiwyg.module b/modules/media_wysiwyg/media_wysiwyg.module
index 162e60b..3d9460b 100644
--- a/modules/media_wysiwyg/media_wysiwyg.module
+++ b/modules/media_wysiwyg/media_wysiwyg.module
@@ -369,3 +369,18 @@ function media_wysiwyg_filter_fields_with_text_filtering($entity_type, $entity)
 
   return $fields_with_text_filtering;
 }
+
+/**
+ * Implements hook_media_browser_params_alter().
+ */
+function media_wysiwyg_media_browser_params_alter(&$params) {
+  // Set the media browser options as defined in the interface.
+  if (!empty($params['id']) && $params['id'] === 'media_wysiwyg') {
+    $params = array(
+        'enabledPlugins' => variable_get('media_wysiwyg_wysiwyg_browser_plugins', array()),
+        'file_directory' => variable_get('media_wysiwyg_wysiwyg_upload_directory', ''),
+        'types' => variable_get('media_wysiwyg_wysiwyg_allowed_types', array('audio', 'image', 'video', 'document')),
+        'id' => 'media_wysiwyg',
+      ) + $params;
+  }
+}
diff --git a/modules/media_wysiwyg/wysiwyg_plugins/media.inc b/modules/media_wysiwyg/wysiwyg_plugins/media.inc
index 9cd03bb..fc67d6b 100644
--- a/modules/media_wysiwyg/wysiwyg_plugins/media.inc
+++ b/modules/media_wysiwyg/wysiwyg_plugins/media.inc
@@ -22,9 +22,6 @@ function media_wysiwyg_media_plugin() {
     'css file' => 'media_wysiwyg.css',
     'settings' => array(
       'global' => array(
-        'enabledPlugins' => variable_get('media_wysiwyg_wysiwyg_browser_plugins', array()),
-        'file_directory' => variable_get('media_wysiwyg_wysiwyg_upload_directory', ''),
-        'types' => variable_get('media_wysiwyg_wysiwyg_allowed_types', array('audio', 'image', 'video', 'document')),
         'id' => 'media_wysiwyg',
       ),
     ),
