--- feature_set.admin.inc	2015-07-03 16:21:22.768589487 +0200
+++ feature_set.admin.inc	2015-07-03 16:30:10.000000000 +0200
@@ -27,14 +27,18 @@
         $elementname = 'featureset-' . $featureset;
         $form[$elementname] = array(
           '#type' => 'checkbox',
-          '#disabled' => empty($details['status']) ? TRUE : FALSE,
-          // Disabled the widget if its in an inconsistent.
+          // Disable the widget if its in an inconsistent.
+          '#disabled' => (empty($details['status']) || _feature_set_is_requiredby($featureset) || _feature_set_requires($featureset)) ? TRUE : FALSE,
+          '#disabled' => (empty($details['status']) || _feature_set_is_requiredby($featureset) || _feature_set_requires($featureset)) ? TRUE : FALSE,
           '#default_value' => (FEATURE_SET_ENABLED & $details['status']) ? 1 : 0,
           '#featuresetinfo' => array(
             'featureset' => $details['title'],
             'description' => $details['description'],
+            'documentation' => $details['documentation'],
+            'require' => _feature_set_get_require($featureset),
             'icon' => empty($details['icon']) ? '' : $details['icon'],
             'category' => empty($details['category']) ? '' : $details['category'],
+            'font' => empty($details['font']) ? '' : $details['font'],
           ),
         );
 

--- feature_set.module	2015-07-03 16:21:22.769589527 +0200
+++ feature_set.module  2015-11-24 11:02:23.000000000 +0100
@@ -125,6 +125,8 @@
       }
     }
   }
+  ksort($sets);
+  
   return $sets;
 }

@@ -322,6 +369,88 @@
 }
 
 /**
+ * Return TRUE if features or modules require the module $module.
+ */
+function _feature_set_is_requiredby($module) {
+  $is_required = 0;
+
+  $modules = system_rebuild_module_data();
+  if (isset($modules[$module])) {
+    $required_by = $modules[$module]->required_by;
+    $module_list = array_keys(module_list());
+    if (!empty($required_by)) {
+      foreach (array_keys($required_by) as $key) {
+        $check_module = in_array($key, $module_list);
+        $check_profile = ($key == variable_get("install_profile")) ? TRUE : FALSE;
+        // Check if the module is required by another one and if this module
+        // is not a installation profile.
+        if ($check_module && !$check_profile) {
+          $is_required++;
+        }
+      }
+    }
+    return ($is_required > 0) ? TRUE : FALSE;
+  }
+}
+
+
+/**
+ * Return TRUE if module $module requires other features (that are disabled).
+ */
+function _feature_set_requires($module) {
+  $requires = 0;
+
+  $modules = system_rebuild_module_data();
+  if (isset($modules[$module])) {
+    if (is_array($modules[$module]->requires)) {
+      $list_requires = array_keys($modules[$module]->requires);
+    }
+    else {
+      $list_requires = array();
+    }
+
+    $list_feature = array_keys(feature_set_get_featuresets());
+    $list_module_enabled = module_list();
+
+    foreach ($list_requires as $value) {
+      if (in_array($value, $list_feature) && !in_array($value, $list_module_enabled)) {
+        $requires++;
+      }
+    }
+    return ($requires > 0) ? TRUE : FALSE;
+  }
+}
+
+/**
+ * Return the list of all the modules that require the module $module.
+ */
+function _feature_set_get_require($module) {
+  $modules = system_rebuild_module_data();
+
+  $featuresets = feature_set_get_featuresets();
+  $list_features = array_keys($featuresets);
+
+  if (isset($modules[$module])) {
+    if (is_array($modules[$module]->requires)) {
+      $list_requires = array_keys($modules[$module]->requires);
+    }
+    else {
+      $list_requires = array();
+    }
+
+    $output = '<div id="require">';
+    foreach ($list_features as $value) {
+      if (in_array($value, $list_requires)) {
+        $output .= t("requires") . " : " . $featuresets[$value]["title"] . " ";
+      }
+    }
+    $output .= '</div>';
+    return $output;
+  }
+}
+
+
+/**
  * Implements hook_theme().
  */
 function feature_set_theme($existing, $type, $theme, $path) {
